{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EoO7ROnuht51"
   },
   "source": [
    "<center><font size=6> Bank Churn Prediction </font></center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Q__obHNhdHtV"
   },
   "source": [
    "## Problem Statement"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "WSyQJZSAaPA3"
   },
   "source": [
    "### Context"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vJQ5k8umdJdN"
   },
   "source": [
    "Businesses like banks which provide service have to worry about problem of 'Customer Churn' i.e. customers leaving and joining another service provider. It is important to understand which aspects of the service influence a customer's decision in this regard. Management can concentrate efforts on improvement of service, keeping in mind these priorities."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "s749lpTNaRkN"
   },
   "source": [
    "### Objective"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XbrLMQQ6dKQU"
   },
   "source": [
    "You as a Data scientist with the  bank need to  build a neural network based classifier that can determine whether a customer will leave the bank  or not in the next 6 months."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Tsb28swdaVAs"
   },
   "source": [
    "### Data Dictionary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "-mquomUwdMol"
   },
   "source": [
    "* CustomerId: Unique ID which is assigned to each customer\n",
    "\n",
    "* Surname: Last name of the customer\n",
    "\n",
    "* CreditScore: It defines the credit history of the customer.\n",
    "  \n",
    "* Geography: A customerâ€™s location\n",
    "   \n",
    "* Gender: It defines the Gender of the customer\n",
    "   \n",
    "* Age: Age of the customer\n",
    "    \n",
    "* Tenure: Number of years for which the customer has been with the bank\n",
    "\n",
    "* NumOfProducts: refers to the number of products that a customer has purchased through the bank.\n",
    "\n",
    "* Balance: Account balance\n",
    "\n",
    "* HasCrCard: It is a categorical variable which decides whether the customer has credit card or not.\n",
    "\n",
    "* EstimatedSalary: Estimated salary\n",
    "\n",
    "* isActiveMember: Is is a categorical variable which decides whether the customer is active member of the bank or not ( Active member in the sense, using bank products regularly, making transactions etc )\n",
    "\n",
    "* Exited : whether or not the customer left the bank within six month. It can take two values\n",
    "** 0=No ( Customer did not leave the bank )\n",
    "** 1=Yes ( Customer left the bank )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "id": "oyTYkHrRc0kz"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'# Installing the libraries with the specified version.\\n!pip install tensorflow==2.15.0 scikit-learn==1.2.2 seaborn==0.13.1 matplotlib==3.7.1 numpy==1.25.2 pandas==1.5.3 imbalanced-learn==0.10.1 -q --user\\n'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''# Installing the libraries with the specified version.\n",
    "!pip install tensorflow==2.15.0 scikit-learn==1.2.2 seaborn==0.13.1 matplotlib==3.7.1 numpy==1.25.2 pandas==1.5.3 imbalanced-learn==0.10.1 -q --user\n",
    "'''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FHHrSIl4c6Yn"
   },
   "source": [
    "## Importing necessary libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "IfeZclzIHUNs"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From C:\\Users\\jonha\\AppData\\Roaming\\Python\\Python311\\site-packages\\keras\\src\\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Libraries to help with reading and manipulating data\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# libaries to help with data visualization\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Library to split data\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# library to import to standardize the data\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
    "\n",
    "# importing different functions to build models\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "from keras import backend\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Dropout\n",
    "\n",
    "# importing SMOTE\n",
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "# importing metrics\n",
    "from sklearn.metrics import confusion_matrix,roc_curve,classification_report,recall_score\n",
    "\n",
    "import random\n",
    "\n",
    "# Library to avoid the warnings\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "z7ubXtC8HUOA"
   },
   "source": [
    "## Loading the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "id": "xGZLJmZUdkPq"
   },
   "outputs": [],
   "source": [
    "# Standard import of a Comma Separated Values file\n",
    "Churn = pd.read_csv(\"Churn.csv\")\n",
    "\n",
    "# Making a copy to avoid corrupting the original data\n",
    "data = Churn.copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "eRxrJ2MHd_Sf"
   },
   "source": [
    "## Data Overview"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "id": "4sPbCEoLuQBk"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 10000 rows and 14 columns.\n"
     ]
    }
   ],
   "source": [
    "# Using a quick trick to see the simple shape of the data.\n",
    "print(f\"There are {data.shape[0]} rows and {data.shape[1]} columns.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0          1    15634602  Hargrave          619    France  Female   42   \n",
       "1          2    15647311      Hill          608     Spain  Female   41   \n",
       "2          3    15619304      Onio          502    France  Female   42   \n",
       "3          4    15701354      Boni          699    France  Female   39   \n",
       "4          5    15737888  Mitchell          850     Spain  Female   43   \n",
       "\n",
       "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0       2       0.00              1          1               1   \n",
       "1       1   83807.86              1          0               1   \n",
       "2       8  159660.80              3          1               0   \n",
       "3       1       0.00              2          0               0   \n",
       "4       2  125510.82              1          1               1   \n",
       "\n",
       "   EstimatedSalary  Exited  \n",
       "0        101348.88       1  \n",
       "1        112542.58       0  \n",
       "2        113931.57       1  \n",
       "3         93826.63       0  \n",
       "4         79084.10       0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Using the .head() function to see what the data set looks like.\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* RowNumber and CustomerID likely serve no purpose. Exited is our target variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10000 entries, 0 to 9999\n",
      "Data columns (total 14 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   RowNumber        10000 non-null  int64  \n",
      " 1   CustomerId       10000 non-null  int64  \n",
      " 2   Surname          10000 non-null  object \n",
      " 3   CreditScore      10000 non-null  int64  \n",
      " 4   Geography        10000 non-null  object \n",
      " 5   Gender           10000 non-null  object \n",
      " 6   Age              10000 non-null  int64  \n",
      " 7   Tenure           10000 non-null  int64  \n",
      " 8   Balance          10000 non-null  float64\n",
      " 9   NumOfProducts    10000 non-null  int64  \n",
      " 10  HasCrCard        10000 non-null  int64  \n",
      " 11  IsActiveMember   10000 non-null  int64  \n",
      " 12  EstimatedSalary  10000 non-null  float64\n",
      " 13  Exited           10000 non-null  int64  \n",
      "dtypes: float64(2), int64(9), object(3)\n",
      "memory usage: 1.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# Looking at the data types of the dataset.\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* There seems to be no null points in the data. There are 3 object and 11 int64 or float64 numerical."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking the dataset for duplicated rows.\n",
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* There are no duplicated rows in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber          0\n",
       "CustomerId         0\n",
       "Surname            0\n",
       "CreditScore        0\n",
       "Geography          0\n",
       "Gender             0\n",
       "Age                0\n",
       "Tenure             0\n",
       "Balance            0\n",
       "NumOfProducts      0\n",
       "HasCrCard          0\n",
       "IsActiveMember     0\n",
       "EstimatedSalary    0\n",
       "Exited             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Verifying that there are no missing values in the dataset.\n",
    "data.isnull().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* This verifies that there are no missing values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber          10000\n",
       "CustomerId         10000\n",
       "Surname             2932\n",
       "CreditScore          460\n",
       "Geography              3\n",
       "Gender                 2\n",
       "Age                   70\n",
       "Tenure                11\n",
       "Balance             6382\n",
       "NumOfProducts          4\n",
       "HasCrCard              2\n",
       "IsActiveMember         2\n",
       "EstimatedSalary     9999\n",
       "Exited                 2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking the number of unique data points in each column of the dataset.\n",
    "data.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* There are 10000 of 10000 unique entries for RowNumber and CustomerID making them useless in this dataset. I think the Surname is also just an identifier. The estimated salary also has a high number of unique data points but I think it will prove important.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Smith       32\n",
      "Scott       29\n",
      "Martin      29\n",
      "Walker      28\n",
      "Brown       26\n",
      "            ..\n",
      "Izmailov     1\n",
      "Bold         1\n",
      "Bonham       1\n",
      "Poninski     1\n",
      "Burbidge     1\n",
      "Name: Surname, Length: 2932, dtype: int64\n",
      "--------------------------------------------------\n",
      "France     5014\n",
      "Germany    2509\n",
      "Spain      2477\n",
      "Name: Geography, dtype: int64\n",
      "--------------------------------------------------\n",
      "Male      5457\n",
      "Female    4543\n",
      "Name: Gender, dtype: int64\n",
      "--------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "# Making a summary of the categorical columns\n",
    "cat_cols = [\"Surname\", \"Geography\", \"Gender\"]\n",
    "\n",
    "for column in cat_cols:\n",
    "    print(data[column].value_counts())\n",
    "    print(\"-\" * 50)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* This shows that the surname column is useless. There are 3 countries in geography, and nothing special about the gender column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>RowNumber</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>5.000500e+03</td>\n",
       "      <td>2886.895680</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2500.75</td>\n",
       "      <td>5.000500e+03</td>\n",
       "      <td>7.500250e+03</td>\n",
       "      <td>10000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerId</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>1.569094e+07</td>\n",
       "      <td>71936.186123</td>\n",
       "      <td>15565701.00</td>\n",
       "      <td>15628528.25</td>\n",
       "      <td>1.569074e+07</td>\n",
       "      <td>1.575323e+07</td>\n",
       "      <td>15815690.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CreditScore</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>6.505288e+02</td>\n",
       "      <td>96.653299</td>\n",
       "      <td>350.00</td>\n",
       "      <td>584.00</td>\n",
       "      <td>6.520000e+02</td>\n",
       "      <td>7.180000e+02</td>\n",
       "      <td>850.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>3.892180e+01</td>\n",
       "      <td>10.487806</td>\n",
       "      <td>18.00</td>\n",
       "      <td>32.00</td>\n",
       "      <td>3.700000e+01</td>\n",
       "      <td>4.400000e+01</td>\n",
       "      <td>92.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tenure</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>5.012800e+00</td>\n",
       "      <td>2.892174</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>5.000000e+00</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>10.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Balance</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>7.648589e+04</td>\n",
       "      <td>62397.405202</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>9.719854e+04</td>\n",
       "      <td>1.276442e+05</td>\n",
       "      <td>250898.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumOfProducts</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>1.530200e+00</td>\n",
       "      <td>0.581654</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>4.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HasCrCard</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>7.055000e-01</td>\n",
       "      <td>0.455840</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IsActiveMember</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>5.151000e-01</td>\n",
       "      <td>0.499797</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>1.000902e+05</td>\n",
       "      <td>57510.492818</td>\n",
       "      <td>11.58</td>\n",
       "      <td>51002.11</td>\n",
       "      <td>1.001939e+05</td>\n",
       "      <td>1.493882e+05</td>\n",
       "      <td>199992.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exited</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>2.037000e-01</td>\n",
       "      <td>0.402769</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count          mean           std          min  \\\n",
       "RowNumber        10000.0  5.000500e+03   2886.895680         1.00   \n",
       "CustomerId       10000.0  1.569094e+07  71936.186123  15565701.00   \n",
       "CreditScore      10000.0  6.505288e+02     96.653299       350.00   \n",
       "Age              10000.0  3.892180e+01     10.487806        18.00   \n",
       "Tenure           10000.0  5.012800e+00      2.892174         0.00   \n",
       "Balance          10000.0  7.648589e+04  62397.405202         0.00   \n",
       "NumOfProducts    10000.0  1.530200e+00      0.581654         1.00   \n",
       "HasCrCard        10000.0  7.055000e-01      0.455840         0.00   \n",
       "IsActiveMember   10000.0  5.151000e-01      0.499797         0.00   \n",
       "EstimatedSalary  10000.0  1.000902e+05  57510.492818        11.58   \n",
       "Exited           10000.0  2.037000e-01      0.402769         0.00   \n",
       "\n",
       "                         25%           50%           75%          max  \n",
       "RowNumber            2500.75  5.000500e+03  7.500250e+03     10000.00  \n",
       "CustomerId       15628528.25  1.569074e+07  1.575323e+07  15815690.00  \n",
       "CreditScore           584.00  6.520000e+02  7.180000e+02       850.00  \n",
       "Age                    32.00  3.700000e+01  4.400000e+01        92.00  \n",
       "Tenure                  3.00  5.000000e+00  7.000000e+00        10.00  \n",
       "Balance                 0.00  9.719854e+04  1.276442e+05    250898.09  \n",
       "NumOfProducts           1.00  1.000000e+00  2.000000e+00         4.00  \n",
       "HasCrCard               0.00  1.000000e+00  1.000000e+00         1.00  \n",
       "IsActiveMember          0.00  1.000000e+00  1.000000e+00         1.00  \n",
       "EstimatedSalary     51002.11  1.001939e+05  1.493882e+05    199992.48  \n",
       "Exited                  0.00  0.000000e+00  0.000000e+00         1.00  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Looking at the mathematical properties of the dataset.\n",
    "data.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The estimated salary has a large variety and a super low min. I finid it odd that there is an entry for 11.58. Seems super low."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping the RowNumber, CustomerID, and Surname columns as they do not add any useful information\n",
    "data.drop(columns=[\"RowNumber\", \"CustomerId\", \"Surname\",], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "W036jsgwRdVN"
   },
   "source": [
    "## Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "nSFkV8KJiZSv"
   },
   "source": [
    "### Univariate Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "id": "g1Lxry70ibDw"
   },
   "outputs": [],
   "source": [
    "# function to create labeled barplots\n",
    "\n",
    "\n",
    "def labeled_barplot(data, feature, perc=False, n=None):\n",
    "    \"\"\"\n",
    "    Barplot with percentage at the top\n",
    "\n",
    "    data: dataframe\n",
    "    feature: dataframe column\n",
    "    perc: whether to display percentages instead of count (default is False)\n",
    "    n: displays the top n category levels (default is None, i.e., display all levels)\n",
    "    \"\"\"\n",
    "\n",
    "    total = len(data[feature])  # length of the column\n",
    "    count = data[feature].nunique()\n",
    "    if n is None:\n",
    "        plt.figure(figsize=(count + 1, 5))\n",
    "    else:\n",
    "        plt.figure(figsize=(n + 1, 5))\n",
    "\n",
    "    plt.xticks(rotation=90, fontsize=15)\n",
    "    ax = sns.countplot(\n",
    "        data=data,\n",
    "        x=feature,\n",
    "        palette=\"Paired\",\n",
    "        order=data[feature].value_counts().index[:n].sort_values(),\n",
    "    )\n",
    "\n",
    "    for p in ax.patches:\n",
    "        if perc == True:\n",
    "            label = \"{:.1f}%\".format(\n",
    "                100 * p.get_height() / total\n",
    "            )  # percentage of each class of the category\n",
    "        else:\n",
    "            label = p.get_height()  # count of each level of the category\n",
    "\n",
    "        x = p.get_x() + p.get_width() / 2  # width of the plot\n",
    "        y = p.get_height()  # height of the plot\n",
    "\n",
    "        ax.annotate(\n",
    "            label,\n",
    "            (x, y),\n",
    "            ha=\"center\",\n",
    "            va=\"center\",\n",
    "            size=12,\n",
    "            xytext=(0, 5),\n",
    "            textcoords=\"offset points\",\n",
    "        )  # annotate the percentage\n",
    "\n",
    "    plt.show()  # show the plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to plot a boxplot and a histogram along the same scale.\n",
    "\n",
    "\n",
    "def histogram_boxplot(data, feature, figsize=(12, 7), kde=False, bins=None):\n",
    "    \"\"\"\n",
    "    Boxplot and histogram combined\n",
    "\n",
    "    data: dataframe\n",
    "    feature: dataframe column\n",
    "    figsize: size of figure (default (12,7))\n",
    "    kde: whether to the show density curve (default False)\n",
    "    bins: number of bins for histogram (default None)\n",
    "    \"\"\"\n",
    "    f2, (ax_box2, ax_hist2) = plt.subplots(\n",
    "        nrows=2,  # Number of rows of the subplot grid= 2\n",
    "        sharex=True,  # x-axis will be shared among all subplots\n",
    "        gridspec_kw={\"height_ratios\": (0.25, 0.75)},\n",
    "        figsize=figsize,\n",
    "    )  # creating the 2 subplots\n",
    "    sns.boxplot(\n",
    "        data=data, x=feature, ax=ax_box2, showmeans=True, color=\"violet\"\n",
    "    )  # boxplot will be created and a star will indicate the mean value of the column\n",
    "    sns.histplot(\n",
    "        data=data, x=feature, kde=kde, ax=ax_hist2, bins=bins, palette=\"winter\"\n",
    "    ) if bins else sns.histplot(\n",
    "        data=data, x=feature, kde=kde, ax=ax_hist2\n",
    "    )  # For histogram\n",
    "    ax_hist2.axvline(\n",
    "        data[feature].mean(), color=\"green\", linestyle=\"--\"\n",
    "    )  # Add mean to the histogram\n",
    "    ax_hist2.axvline(\n",
    "        data[feature].median(), color=\"black\", linestyle=\"-\"\n",
    "    )  # Add median to the histogram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"Geography\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Half of the customers are from France. The remainder are split between Germany and Spain. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"Gender\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* A majority of the customers are male at 54.6%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"NumOfProducts\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* 50.8% of customers have one product and 45.9% have two. The remaining 3.3% are split between 3 products at 2.7% and 4 products at 0.6%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"HasCrCard\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* 70.5 percent of the customers have a credit card."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"IsActiveMember\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Only 51.5% of the customers are active members."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labeled_barplot(data, \"Exited\", perc=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Our target variable shows 20.4% exited which is the number we are trying to find the factors that lead to it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "histogram_boxplot(data, \"CreditScore\", kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The data is slightly skewed to the left, but there is an interesting peak at the high end."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "histogram_boxplot(data, \"Age\", kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The age data is heavily skewed to the right with two major peaks and 3 minor peaks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "histogram_boxplot(data, \"Tenure\", kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The tenure is very evenly distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "histogram_boxplot(data, \"Balance\", kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The balance catagory is heavily skewed to the left due to a huge peak at 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "histogram_boxplot(data, \"EstimatedSalary\", kde=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The estimated salary is evenly distributed."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "OlHTHF4glMxS"
   },
   "source": [
    "### Bivariate Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "id": "y_pKBXS9lLel"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Making a heatmap of the data to look for correlation.\n",
    "plt.figure(figsize=(15, 7))\n",
    "sns.heatmap(\n",
    "    data.corr(), annot=True, vmin=-1, vmax=1, fmt=\".2f\", cmap=\"Spectral\"\n",
    ")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Looking at the target column (Exited), there are positive correlations between Exited and Age at 0.29 as well as Exited and Balance at 0.12. There are negative correlation with ISActiveMember and Exited -0.26. The only other noticeable correlation is a negative correlation between NumOfProducts and Balance at -0.30."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to plot stacked bar chart\n",
    "\n",
    "\n",
    "def stacked_barplot(data, predictor, target):\n",
    "    \"\"\"\n",
    "    Print the category counts and plot a stacked bar chart\n",
    "\n",
    "    data: dataframe\n",
    "    predictor: independent variable\n",
    "    target: target variable\n",
    "    \"\"\"\n",
    "    count = data[predictor].nunique()\n",
    "    sorter = data[target].value_counts().index[-1]\n",
    "    tab1 = pd.crosstab(data[predictor], data[target], margins=True).sort_values(\n",
    "        by=sorter, ascending=False\n",
    "    )\n",
    "    print(tab1)\n",
    "    print(\"-\" * 120)\n",
    "    tab = pd.crosstab(data[predictor], data[target], normalize=\"index\").sort_values(\n",
    "        by=sorter, ascending=False\n",
    "    )\n",
    "    tab.plot(kind=\"bar\", stacked=True, figsize=(count + 1, 5))\n",
    "    plt.legend(\n",
    "        loc=\"lower left\",\n",
    "        frameon=False,\n",
    "    )\n",
    "    plt.legend(loc=\"upper left\", bbox_to_anchor=(1, 1))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited     0     1    All\n",
      "Gender                   \n",
      "All     7963  2037  10000\n",
      "Female  3404  1139   4543\n",
      "Male    4559   898   5457\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"Gender\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* It looks like a higher percentage of females exited as compared to males."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited        0     1    All\n",
      "Geography                   \n",
      "All        7963  2037  10000\n",
      "Germany    1695   814   2509\n",
      "France     4204   810   5014\n",
      "Spain      2064   413   2477\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "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YDxiBQAwHrFyg08//dTuEQDgnMap627g7++vTp06KTk5WePGjeMDeQ1TV1enJUuWKDc3V/v27VN9fb3T7Z988olNk0GSfvzxR7355pvauXOnHnzwQbVv314FBQUKCwtTRESE3ePBTYiVG+zfv18vvfSSli5dqq+//lqDBg3SnXfeqVGjRsnPz8/u8TxeSkqKlixZomHDhqlDhw4NPiz5ySeftGkybN26VUlJSWrTpo1KS0tVXFys6OhozZw5U2VlZVq2bJndI8JNiJWbFRQU6MUXX9Srr74qSbr11lt15513Ki4uzubJPFdISIiWLVumoUOH2j0K/iApKUm9e/fW3//+d7Vu3VpbtmxRdHS01q9fr1tvvVWlpaV2jwg34TUrN+vdu7fS0tKUkpKiI0eOaPHixerTp4+uvPJKff3113aP55H8/PzUtWtXu8dAIzZt2qS77rqrwfKIiIiTficemh9i5SbHjx/Xm2++qaFDh6pLly768MMPNX/+fFVUVKikpERdunTRzTffbPeYHmnq1Kl66qmn+MZWA/n7+zf6rb3bt2/X+eefb8NEsAuHAd3gvvvu06uvvirLsnT77bdrwoQJDT7It7y8XB07dmzw4j6a3g033KBPP/1U7du31yWXXCJfX1+n21euXGnTZJgwYYIOHDig119/Xe3bt9fWrVvl4+OjUaNG6d///d+VnZ1t94hwEyO/Kbi5+eabb/TMM8/oxhtvPOEnRoeEhHCKu03atm2rG264we4x0Ih58+bppptuUmhoqH766ScNGDBA5eXlSkxM1OOPP273eHAj9qwAGG/dunXasmWLjhw5ot69eyspKcnukeBmxMpNduzYoU8//bTR9/Gkp6fbNBUAnBuIlRssWrRIkyZNUkhIiMLDw53ex+Pl5aWCggIbp/NMvXv3Vm5urtq1a6dLL720wXurfo/nxz7333+/unbtqvvvv99p+fz581VSUsJrVh6E16zc4L/+67/0+OOPa9q0aXaPgv9v5MiRjtcPR40aZe8wOKG33npL7777boPll19+uebMmUOsPAh7Vm4QHByswsJCRUdH2z0KcE4JCAjQV1991eB9cCUlJerZs6eOHTtm02RwN95n5QY333yzPvroI7vHAM45Xbt21erVqxss/+CDD/jjz8NwGNANunbtqkceeUQbNmxQbGxsg/fx/PF4PNyrrq5OTz75pF5//XWVlZWptrbW6faDBw/aNBlSU1OVkpKiyspKDRo0SJKUm5urefPmcQjQw3AY0A0uuOCCE97m5eWlXbt2uXEa/FF6erqef/55TZ06VTNnztSMGTNUWlqqd955R+np6fwxYbMFCxbo8ccf1w8//CBJioqK0qOPPqqxY8faPBnciVjB48XExOjpp5/WsGHD1Lp1axUWFjqWbdiwQcuXL7d7REiqrKxUy5YtFRQUZPcosAGvWcHjlZeXKzY2VpIUFBSkQ4cOSZKuv/56rVq1ys7R8Dvnn38+ofJgvGblJt99953efffdRl8TycrKsmkqSFKnTp20d+9ede7cWTExMfroo4/Uu3dvbdq06YQfjwX3qKio0AMPPOD4Ysw/Hgiqq6uzaTK4G7Fyg9zcXI0YMULR0dEqKipSz549VVpaKsuy1Lt3b7vH83g33HCDcnNz1a9fP91333267bbb9MILL6isrExTpkyxezyPNn78eJWVlemRRx5p9Isx4Tl4zcoNEhISNGTIEM2aNcvxBXKhoaEaM2aMrrvuOk2aNMnuEfE7eXl5ysvLU7du3TR8+HC7x/ForVu31ueff674+Hi7R4HNiJUb/P5F+3bt2mnt2rW65JJLtGXLFo0cOZJvOwVOoEePHnrllVd06aWX2j0KbMYJFm7QqlUrx+tUHTp00M6dOx237d+/366x8DvFxcVKSUnR1VdfrauvvlopKSkqLi62eyyPl52drenTp/MHHXjNyh0uu+wyrV27Vt27d9fQoUM1depUffnll1q5cqUuu+wyu8fzeG+99Zb+8z//U3379lViYqIkacOGDerZs6dee+01/eUvf7F5Qs81evRoHT16VDExMQoMDGzwhnresO05OAzoBrt27dKRI0fUq1cvVVdXa+rUqVq/fr26deumrKwsdenSxe4RPVpMTIzGjBmjxx57zGl5RkaGXn75Zac9YbjX0qVLT3r7uHHj3DQJ7Eas4PECAwO1devWBh+WumPHDsXFxeno0aM2TQbgVxwGdLMjR440+PLF4OBgm6aBJA0cOFCff/55g1itXbtWV155pU1T4Y+OHTvW4D2K/L/jOYiVG+zevVspKSlas2aN01caWJYlLy8v3thosxEjRmjatGnKz893vIa4YcMGvfHGG5o1a5bT9ymNGDHCrjE9UnV1taZNm6bXX39dBw4caHA7/+94Dg4DukH//v1lWZYmT56ssLCwBm9sHDBggE2TQZK8vU/tpFj+sHC/e++9V59++qlmz56t22+/XTk5Ofr+++/1j3/8Q3PmzNGYMWPsHhFuQqzcICgoSPn5+brooovsHgU4p3Tu3FnLli3TwIEDFRwcrIKCAnXt2lUvvfSSXn31Vb3//vt2jwg34X1WbvBv//Zv2rNnj91j4A/y8vL0v//7v07Lli1bpgsuuEChoaH661//qpqaGpumg/TLqem/fslicHCw41T1K664Qp999pmdo8HNeM3KDZ5//nndfffd+v7779WzZ88G7xXp1auXTZN5tscee0wDBw7U9ddfL0n68ssvdeedd2r8+PHq3r275s6dq44dO+rRRx+1d1APFh0drd27d6tz5866+OKL9frrryshIUHvvfee2rZta/d4cCMOA7rBhg0bdOuttzq9C9/Ly4sTLGzWoUMHvffee+rbt68kacaMGfq///s/rV27VpL0xhtvKCMjQ998842dY3q0J598Uj4+Prr//vv1z3/+U8OHD5dlWTp+/LiysrI0efJku0eEmxArN+jRo4e6d++uhx56qNETLHhTsD0CAgK0Y8cORUZGSvrl0NKQIUM0Y8YMSVJpaaliY2N1+PBhO8fE73z77bfKz89X165dOSLhYTgM6Abffvut3n333Qbv44G9wsLCtHv3bkVGRqq2tlYFBQWaNWuW4/bDhw83OGQL9zl+/Liuu+46LVy4UN26dZP0yx92/HHnmTjBwg0GDRqkLVu22D0G/mDo0KGaPn26Pv/8c6WlpSkwMNDpTcBbt25VTEyMjRN6Nl9fX23dutXuMWAI9qzcYPjw4ZoyZYq+/PJLxcbGNvhrnTea2mP27Nm68cYbNWDAAAUFBWnp0qXy8/Nz3L548WJde+21Nk6IX78Ic86cOXaPApvxmpUbnOxNp5xgYb9Dhw4pKChIPj4+TssPHjyooKAgp4DBve677z4tW7ZM3bp1U58+fdSqVSun27OysmyaDO5GrAAYZ9euXYqKitLVV199wnW8vLz0ySefuHEq2IlYNbHjx4+rZcuWKiwsVM+ePe0eBzgn+Pj4aO/evQoNDZX0y/daPf300woLC7N5MtiFEyyamK+vrzp37syhPsAFf/wb+oMPPlB1dbVN08AExMoNZsyYoYcffphvNQVOEweAwNmAbjB//nyVlJSoY8eO6tKlS4MXiQsKCmyaDDCTl5dXgzfP//E6PAuxcoNRo0bZPQJwTrEsS+PHj5e/v7+kX7548e67727wh97KlSvtGA824AQLAMZJTk4+pfVefPHFJp4EpiBWbvLjjz/qzTff1M6dO/Xggw+qffv2KigoUFhYmCIiIuweDwCMRqzcYOvWrUpKSlKbNm1UWlqq4uJiRUdHa+bMmSorK9OyZcvsHhEAjMbZgG6Qmpqq8ePHa8eOHQoICHAsHzp0KF8gBwCngFi5waZNm3TXXXc1WB4REaHy8nIbJgKAcwuxcgN/f39VVVU1WL59+3adf/75NkwEAOcWYuUGI0aM0GOPPabjx49L+uX9ImVlZZo2bZr+8pe/2DwdAJiPEyzc4NChQ7rpppu0efNmHT58WB07dlR5ebkuu+wyffDBBw3eOwIAcEas3GjdunXasmWLjhw5ot69eyspKcnukQDgnECsmtBPP/2k3NxcXX/99ZKktLQ01dTUOG5v0aKFHnvsMaczBAEADfFxS01o6dKlWrVqlSNW8+fP1yWXXKKWLVtKkoqKitShQwdNmTLFzjEBwHjsWTWhK6+8Ug899JCGDx8uSWrdurW2bNmi6OhoSdLLL7+snJwc5eXl2TkmABiPswGbUElJiWJjYx3XAwICnL7iPiEhQd98840dowHAOYXDgE3oxx9/dHqNqrKy0un2+vp6p9sBAI1jz6oJderUSV999dUJb9+6das6derkxokA4NxErJrQ0KFDlZ6ermPHjjW47aefftKsWbM0bNgwGyYDgHMLJ1g0oYqKCsXHx8vPz08pKSm68MILJUnFxcWaP3++fv75Z33xxRcKCwuzeVIAMBuxamK7d+/WpEmT9PHHH+vXf2ovLy9dc801evbZZx1nBgIAToxYucnBgwdVUlIiSeratavat29v80QAcO4gVgAA43GCBQDAeMQKAGA8YgUAMB6xAtwkKipK2dnZdo8BnJOIFWxXXl6uyZMnq2vXrgoICFBYWJj69++vBQsW6OjRo3aPB8AAfDYgbLVr1y71799fbdu21RNPPKHY2Fj5+/vryy+/1HPPPaeIiAiNGDHCtvmOHz8uX19f2x4fwC/Ys4Kt7rnnHrVo0UKbN2/Wf/zHf6h79+6Kjo7WyJEjtWrVKsfXq/z444+aMGGCzj//fAUHB2vQoEHasmWL030tWLBAMTEx8vPz00UXXaSXXnrJ6faioiJdccUVCggIUI8ePfTPf/5TXl5eeueddyRJpaWl8vLy0ooVKzRgwAAFBATolVde0YEDB3TLLbcoIiJCgYGBio2N1auvvup03wMHDlRKSopSUlLUpk0bhYSE6JFHHtEf3xly9OhR3XHHHWrdurU6d+6s5557znHboEGDlJKS4rR+ZWWl/Pz8lJube0b/zsA5zwJssn//fsvLy8vKzMz803WTkpKs4cOHW5s2bbK2b99uTZ061TrvvPOsAwcOWJZlWStXrrR8fX2tnJwcq7i42Jo3b57l4+NjffLJJ5ZlWdbPP/9sXXTRRdY111xjFRYWWp9//rmVkJBgSbLefvtty7Isa/fu3ZYkKyoqynrrrbesXbt2WT/88IP13XffWXPnzrW++OILa+fOndbTTz9t+fj4WP/6178c8w0YMMAKCgqyJk+ebBUVFVkvv/yyFRgYaD333HOOdbp06WK1b9/eysnJsXbs2GFlZmZa3t7eVlFRkWVZlvXKK69Y7dq1s44dO+bYJisry4qKirLq6+vP+N8bOJcRK9hmw4YNliRr5cqVTsvPO+88q1WrVlarVq2shx56yPr888+t4OBgp1/ilmVZMTEx1j/+8Q/Lsizr8ssvtyZOnOh0+80332wNHTrUsizL+uCDD6wWLVpYe/fuddz+8ccfNxqr7OzsP5192LBh1tSpUx3XBwwYYHXv3t0pKtOmTbO6d+/uuN6lSxfrtttuc1yvr6+3QkNDrQULFliWZVk//fST1a5dO2vFihWOdXr16mU9+uijfzoP0NxxGBDG2bhxowoLC3XJJZeopqZGW7Zs0ZEjR3TeeecpKCjIcdm9e7d27twpSdq2bZv69+/vdD/9+/fXtm3bJP3y4cGRkZEKDw933J6QkNDo4/ft29fpel1dnWbPnq3Y2Fi1b99eQUFB+vDDD1VWVua03mWXXSYvLy/H9cTERO3YsUN1dXWOZb169XL8t5eXl8LDw7Vv3z5Jv3w55+23367FixdLkgoKCvTVV19p/Pjxp/TvBjRnnGAB23Tt2lVeXl4qLi52Wv7rh/u2bNlSknTkyBF16NBBa9asaXAfbdu2PetztWrVyun63Llz9dRTTyk7O1uxsbFq1aqV/va3v6m2ttbl+/7jyRpeXl6qr693XJ8wYYLi4+P13Xff6cUXX9SgQYPUpUuX0/tBgGaEPSvY5rzzztM111yj+fPnq7q6+oTr9e7dW+Xl5WrRooW6du3qdAkJCZEkde/eXevWrXPabt26derRo4ck6aKLLtKePXtUUVHhuH3Tpk2nNOe6des0cuRI3XbbbYqLi1N0dLS2b9/eYL1//etfTtc3bNigbt26ycfH55QeR5JiY2PVt29fLVq0SMuXL9cdd9xxytsCzRmxgq2effZZ/fzzz+rbt69WrFihbdu2qbi4WC+//LKKiork4+OjpKQkJSYmatSoUfroo49UWlqq9evXa8aMGdq8ebMk6cEHH9SSJUu0YMEC7dixQ1lZWVq5cqUeeOABSdI111yjmJgYjRs3Tlu3btW6des0c+ZMSXI6dNeYbt266eOPP9b69eu1bds23XXXXU7R+1VZWZlSU1NVXFysV199Vc8884wmT57s8r/JhAkTNGfOHFmWpRtuuMHl7YFmye4XzYAffvjBSklJsS644ALL19fXCgoKshISEqy5c+da1dXVlmVZVlVVlXXfffdZHTt2tHx9fa3IyEhrzJgxVllZmeN+nn32WSs6Otry9fW1LrzwQmvZsmVOj7Nt2zarf//+lp+fn3XxxRdb7733niXJWr16tWVZv51g8cUXXzhtd+DAAWvkyJFWUFCQFRoaas2cOdMaO3asNXLkSMc6AwYMsO655x7r7rvvtoKDg6127dpZDz/8sNMJF126dLGefPJJp/uOi4uzMjIynJYdPnzYCgwMtO65557T/BcFmh++IgQea926dbriiitUUlKimJiYM7qvgQMHKj4+/qx8nFJpaaliYmK0adMm9e7d+4zvD2gOOMECHuPtt99WUFCQunXrppKSEk2ePFn9+/c/41CdLcePH9eBAwc0c+ZMXXbZZYQK+B1iBY9x+PBhTZs2TWVlZQoJCVFSUpLmzZtn91gO69at01VXXaULL7xQb775pt3jAEbhMCAAwHicDQgAMB6xAgAYj1gBAIxHrAAAxiNWAADjESsAgPGIFQDAeMQKAGA8YgUAMN7/AxiNzYigkWIvAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 400x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"Geography\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Customers from Germany have a higher rate of exiting than customers from Spain or France."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited     0     1    All\n",
      "Tenure                   \n",
      "All     7963  2037  10000\n",
      "1        803   232   1035\n",
      "3        796   213   1009\n",
      "9        771   213    984\n",
      "5        803   209   1012\n",
      "4        786   203    989\n",
      "2        847   201   1048\n",
      "8        828   197   1025\n",
      "6        771   196    967\n",
      "7        851   177   1028\n",
      "10       389   101    490\n",
      "0        318    95    413\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"Tenure\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The customers with 0 or 1 have the highest levels of exiting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited            0     1    All\n",
      "NumOfProducts                   \n",
      "All            7963  2037  10000\n",
      "1              3675  1409   5084\n",
      "2              4242   348   4590\n",
      "3                46   220    266\n",
      "4                 0    60     60\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"NumOfProducts\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The data shows that the customers with 3 or 4 products have very high levels of exiting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited        0     1    All\n",
      "HasCrCard                   \n",
      "All        7963  2037  10000\n",
      "1          5631  1424   7055\n",
      "0          2332   613   2945\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"HasCrCard\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Customers without a credit card tend to exit at a slightly higher rate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exited             0     1    All\n",
      "IsActiveMember                   \n",
      "All             7963  2037  10000\n",
      "0               3547  1302   4849\n",
      "1               4416   735   5151\n",
      "------------------------------------------------------------------------------------------------------------------------\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 300x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stacked_barplot(data, \"IsActiveMember\", \"Exited\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Customers that are not as active have higher rates of exiting."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "CUXPaUwZHUO8"
   },
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "wgpx0xlSTlzN"
   },
   "source": [
    "### Train-validation-test Split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "id": "VTb3JwlaHUO-"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10000, 10)\n",
      "(10000, 1)\n"
     ]
    }
   ],
   "source": [
    "# Splitting independent and dependent variables into X and Y respectively\n",
    "X = data.drop([\"Exited\"], axis=1)\n",
    "Y = data[[\"Exited\"]]\n",
    "\n",
    "print(X.shape)\n",
    "print(Y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting the training and test set\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting the train set into  dev set and training set\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.20, random_state=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1nEEjgwleiMv"
   },
   "source": [
    "### Dummy Variable Creation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "id": "LJ19WoAYc6Yx"
   },
   "outputs": [],
   "source": [
    "# Storing categorical variables in a list for making dummies.\n",
    "catagorical_data = [\"Geography\",'Gender']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating dummies with the previous list.\n",
    "X_train = pd.get_dummies(X_train, columns=catagorical_data, drop_first=True)\n",
    "X_test = pd.get_dummies(X_test, columns=catagorical_data, drop_first=True)\n",
    "X_val = pd.get_dummies(X_val, columns=catagorical_data, drop_first=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "qlSyq5fNHUPp"
   },
   "source": [
    "### Data Normalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "id": "ltsmUrMiuegY"
   },
   "outputs": [],
   "source": [
    "# defining the list of columns to normalize\n",
    "cols_list = [\"CreditScore\",\"Age\",\"Tenure\",\"Balance\",\"EstimatedSalary\"]\n",
    "\n",
    "# creating an instance of the standard scaler\n",
    "sc = StandardScaler()\n",
    "\n",
    "X_train[cols_list] = sc.fit_transform(X_train[cols_list])\n",
    "X_val[cols_list] = sc.transform(X_val[cols_list])\n",
    "X_test[cols_list] = sc.transform(X_test[cols_list])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(6400, 11)\n",
      "(1600, 11)\n",
      "(6400, 1)\n",
      "(1600, 1)\n",
      "(2000, 11)\n",
      "(2000, 1)\n"
     ]
    }
   ],
   "source": [
    "# Checking the shape\n",
    "print(X_train.shape)\n",
    "print(X_val.shape)\n",
    "print(y_train.shape)\n",
    "print(y_val.shape)\n",
    "print(X_test.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ZLQMVCywT87j"
   },
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "SzDpHlsFT_QA"
   },
   "source": [
    "### Model Evaluation Criterion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FayG94iciXVS"
   },
   "source": [
    "Write down the logic for choosing the metric that would be the best metric for this business scenario.\n",
    "\n",
    "- The bank would want to minimize the chances of False Negatives so Recall would be the best metric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "id": "3drHnx12DSf2"
   },
   "outputs": [],
   "source": [
    "def make_confusion_matrix(actual_targets, predicted_targets):\n",
    "    \"\"\"\n",
    "    To plot the confusion_matrix with percentages\n",
    "\n",
    "    actual_targets: actual target (dependent) variable values\n",
    "    predicted_targets: predicted target (dependent) variable values\n",
    "    \"\"\"\n",
    "    cm = confusion_matrix(actual_targets, predicted_targets)\n",
    "    labels = np.asarray(\n",
    "        [\n",
    "            [\"{0:0.0f}\".format(item) + \"\\n{0:.2%}\".format(item / cm.flatten().sum())]\n",
    "            for item in cm.flatten()\n",
    "        ]\n",
    "    ).reshape(cm.shape[0], cm.shape[1])\n",
    "\n",
    "    plt.figure(figsize=(6, 4))\n",
    "    sns.heatmap(cm, annot=labels, fmt=\"\")\n",
    "    plt.ylabel(\"True label\")\n",
    "    plt.xlabel(\"Predicted label\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_metric_df = pd.DataFrame(columns=[\"recall\"])\n",
    "valid_metric_df = pd.DataFrame(columns=[\"recall\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "735HwSYiDSf1"
   },
   "source": [
    "### Neural Network with SGD Optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "id": "ScqNP3QjDSf3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From C:\\Users\\jonha\\AppData\\Roaming\\Python\\Python311\\site-packages\\keras\\src\\backend.py:277: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model1 = Sequential()\n",
    "model1.add(Dense(64, activation=\"relu\", input_dim = X_train.shape[1]))\n",
    "model1.add(Dense(64, activation=\"relu\"))\n",
    "model1.add(Dense(1, activation=\"sigmoid\"))\n",
    "model1.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.SGD(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model1.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "WARNING:tensorflow:From C:\\Users\\jonha\\AppData\\Roaming\\Python\\Python311\\site-packages\\keras\\src\\utils\\tf_utils.py:492: The name tf.ragged.RaggedTensorValue is deprecated. Please use tf.compat.v1.ragged.RaggedTensorValue instead.\n",
      "\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.6201 - recall: 0.2307 - val_loss: 0.5192 - val_recall: 0.0000e+00\n",
      "Epoch 2/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4980 - recall: 0.0000e+00 - val_loss: 0.4902 - val_recall: 0.0000e+00\n",
      "Epoch 3/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4816 - recall: 0.0000e+00 - val_loss: 0.4804 - val_recall: 0.0000e+00\n",
      "Epoch 4/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4729 - recall: 0.0000e+00 - val_loss: 0.4731 - val_recall: 0.0000e+00\n",
      "Epoch 5/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4658 - recall: 0.0000e+00 - val_loss: 0.4669 - val_recall: 0.0000e+00\n",
      "Epoch 6/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4597 - recall: 7.7399e-04 - val_loss: 0.4616 - val_recall: 0.0030\n",
      "Epoch 7/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4545 - recall: 0.0031 - val_loss: 0.4569 - val_recall: 0.0061\n",
      "Epoch 8/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4499 - recall: 0.0062 - val_loss: 0.4529 - val_recall: 0.0091\n",
      "Epoch 9/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.4458 - recall: 0.0132 - val_loss: 0.4495 - val_recall: 0.0364\n",
      "Epoch 10/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4424 - recall: 0.0325 - val_loss: 0.4464 - val_recall: 0.0576\n",
      "Epoch 11/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4393 - recall: 0.0495 - val_loss: 0.4438 - val_recall: 0.0758\n",
      "Epoch 12/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4365 - recall: 0.0704 - val_loss: 0.4415 - val_recall: 0.0848\n",
      "Epoch 13/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4341 - recall: 0.0875 - val_loss: 0.4394 - val_recall: 0.0909\n",
      "Epoch 14/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4320 - recall: 0.0983 - val_loss: 0.4376 - val_recall: 0.1182\n",
      "Epoch 15/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.4301 - recall: 0.1130 - val_loss: 0.4360 - val_recall: 0.1242\n",
      "Epoch 16/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4283 - recall: 0.1238 - val_loss: 0.4346 - val_recall: 0.1545\n",
      "Epoch 17/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4268 - recall: 0.1440 - val_loss: 0.4332 - val_recall: 0.1515\n",
      "Epoch 18/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.4253 - recall: 0.1502 - val_loss: 0.4320 - val_recall: 0.1636\n",
      "Epoch 19/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.4240 - recall: 0.1625 - val_loss: 0.4309 - val_recall: 0.1636\n",
      "Epoch 20/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.4229 - recall: 0.1649 - val_loss: 0.4299 - val_recall: 0.1697\n",
      "Epoch 21/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4218 - recall: 0.1672 - val_loss: 0.4291 - val_recall: 0.1818\n",
      "Epoch 22/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4208 - recall: 0.1772 - val_loss: 0.4283 - val_recall: 0.1879\n",
      "Epoch 23/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4199 - recall: 0.1912 - val_loss: 0.4275 - val_recall: 0.1879\n",
      "Epoch 24/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4191 - recall: 0.1920 - val_loss: 0.4268 - val_recall: 0.1939\n",
      "Epoch 25/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4183 - recall: 0.2043 - val_loss: 0.4261 - val_recall: 0.1909\n",
      "Epoch 26/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.4176 - recall: 0.2020 - val_loss: 0.4255 - val_recall: 0.1909\n",
      "Epoch 27/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4169 - recall: 0.2012 - val_loss: 0.4250 - val_recall: 0.1909\n",
      "Epoch 28/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4163 - recall: 0.2067 - val_loss: 0.4245 - val_recall: 0.2000\n",
      "Epoch 29/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4156 - recall: 0.2090 - val_loss: 0.4241 - val_recall: 0.1970\n",
      "Epoch 30/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4151 - recall: 0.2082 - val_loss: 0.4237 - val_recall: 0.2121\n",
      "Epoch 31/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4146 - recall: 0.2198 - val_loss: 0.4233 - val_recall: 0.2061\n",
      "Epoch 32/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4140 - recall: 0.2214 - val_loss: 0.4229 - val_recall: 0.2061\n",
      "Epoch 33/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4135 - recall: 0.2198 - val_loss: 0.4226 - val_recall: 0.2212\n",
      "Epoch 34/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4131 - recall: 0.2276 - val_loss: 0.4223 - val_recall: 0.2152\n",
      "Epoch 35/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4126 - recall: 0.2307 - val_loss: 0.4219 - val_recall: 0.2121\n",
      "Epoch 36/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4123 - recall: 0.2260 - val_loss: 0.4216 - val_recall: 0.2121\n",
      "Epoch 37/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4118 - recall: 0.2307 - val_loss: 0.4214 - val_recall: 0.2212\n",
      "Epoch 38/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4114 - recall: 0.2299 - val_loss: 0.4211 - val_recall: 0.2242\n",
      "Epoch 39/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4110 - recall: 0.2314 - val_loss: 0.4208 - val_recall: 0.2303\n",
      "Epoch 40/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4106 - recall: 0.2407 - val_loss: 0.4206 - val_recall: 0.2364\n",
      "Epoch 41/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.4103 - recall: 0.2384 - val_loss: 0.4203 - val_recall: 0.2455\n",
      "Epoch 42/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4099 - recall: 0.2454 - val_loss: 0.4200 - val_recall: 0.2455\n",
      "Epoch 43/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4095 - recall: 0.2392 - val_loss: 0.4198 - val_recall: 0.2455\n",
      "Epoch 44/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4091 - recall: 0.2531 - val_loss: 0.4195 - val_recall: 0.2394\n",
      "Epoch 45/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4088 - recall: 0.2399 - val_loss: 0.4194 - val_recall: 0.2545\n",
      "Epoch 46/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4084 - recall: 0.2562 - val_loss: 0.4190 - val_recall: 0.2424\n",
      "Epoch 47/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4081 - recall: 0.2500 - val_loss: 0.4188 - val_recall: 0.2606\n",
      "Epoch 48/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4078 - recall: 0.2554 - val_loss: 0.4185 - val_recall: 0.2545\n",
      "Epoch 49/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.4074 - recall: 0.2616 - val_loss: 0.4183 - val_recall: 0.2455\n",
      "Epoch 50/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4071 - recall: 0.2531 - val_loss: 0.4180 - val_recall: 0.2545\n",
      "Epoch 51/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4067 - recall: 0.2539 - val_loss: 0.4178 - val_recall: 0.2636\n",
      "Epoch 52/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4063 - recall: 0.2678 - val_loss: 0.4176 - val_recall: 0.2485\n",
      "Epoch 53/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4061 - recall: 0.2632 - val_loss: 0.4174 - val_recall: 0.2545\n",
      "Epoch 54/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4058 - recall: 0.2601 - val_loss: 0.4171 - val_recall: 0.2636\n",
      "Epoch 55/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4054 - recall: 0.2670 - val_loss: 0.4169 - val_recall: 0.2667\n",
      "Epoch 56/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4051 - recall: 0.2678 - val_loss: 0.4167 - val_recall: 0.2727\n",
      "Epoch 57/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4048 - recall: 0.2701 - val_loss: 0.4166 - val_recall: 0.2727\n",
      "Epoch 58/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4045 - recall: 0.2748 - val_loss: 0.4163 - val_recall: 0.2758\n",
      "Epoch 59/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4041 - recall: 0.2779 - val_loss: 0.4160 - val_recall: 0.2606\n",
      "Epoch 60/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4039 - recall: 0.2709 - val_loss: 0.4158 - val_recall: 0.2727\n",
      "Epoch 61/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4035 - recall: 0.2763 - val_loss: 0.4156 - val_recall: 0.2727\n",
      "Epoch 62/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4032 - recall: 0.2686 - val_loss: 0.4155 - val_recall: 0.2788\n",
      "Epoch 63/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4029 - recall: 0.2786 - val_loss: 0.4152 - val_recall: 0.2727\n",
      "Epoch 64/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4026 - recall: 0.2841 - val_loss: 0.4150 - val_recall: 0.2727\n",
      "Epoch 65/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4023 - recall: 0.2763 - val_loss: 0.4148 - val_recall: 0.2727\n",
      "Epoch 66/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4020 - recall: 0.2794 - val_loss: 0.4146 - val_recall: 0.2727\n",
      "Epoch 67/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4016 - recall: 0.2833 - val_loss: 0.4143 - val_recall: 0.2758\n",
      "Epoch 68/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4013 - recall: 0.2748 - val_loss: 0.4142 - val_recall: 0.2909\n",
      "Epoch 69/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4010 - recall: 0.2848 - val_loss: 0.4139 - val_recall: 0.2879\n",
      "Epoch 70/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4007 - recall: 0.2810 - val_loss: 0.4138 - val_recall: 0.2939\n",
      "Epoch 71/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.4004 - recall: 0.2879 - val_loss: 0.4135 - val_recall: 0.2879\n",
      "Epoch 72/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4001 - recall: 0.2879 - val_loss: 0.4133 - val_recall: 0.2879\n",
      "Epoch 73/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3997 - recall: 0.2957 - val_loss: 0.4130 - val_recall: 0.2667\n",
      "Epoch 74/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3993 - recall: 0.2918 - val_loss: 0.4130 - val_recall: 0.2545\n",
      "Epoch 75/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3991 - recall: 0.2786 - val_loss: 0.4127 - val_recall: 0.3030\n",
      "Epoch 76/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3988 - recall: 0.2972 - val_loss: 0.4123 - val_recall: 0.2818\n",
      "Epoch 77/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3985 - recall: 0.2926 - val_loss: 0.4121 - val_recall: 0.3000\n",
      "Epoch 78/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3982 - recall: 0.2980 - val_loss: 0.4120 - val_recall: 0.3000\n",
      "Epoch 79/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3978 - recall: 0.2910 - val_loss: 0.4121 - val_recall: 0.3121\n",
      "Epoch 80/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3976 - recall: 0.3050 - val_loss: 0.4116 - val_recall: 0.2909\n",
      "Epoch 81/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3972 - recall: 0.2995 - val_loss: 0.4114 - val_recall: 0.2939\n",
      "Epoch 82/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3969 - recall: 0.3050 - val_loss: 0.4111 - val_recall: 0.2909\n",
      "Epoch 83/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3966 - recall: 0.2995 - val_loss: 0.4110 - val_recall: 0.2818\n",
      "Epoch 84/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3962 - recall: 0.2949 - val_loss: 0.4109 - val_recall: 0.3061\n",
      "Epoch 85/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3959 - recall: 0.3065 - val_loss: 0.4106 - val_recall: 0.2939\n",
      "Epoch 86/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3957 - recall: 0.3026 - val_loss: 0.4104 - val_recall: 0.3000\n",
      "Epoch 87/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3953 - recall: 0.3026 - val_loss: 0.4102 - val_recall: 0.3000\n",
      "Epoch 88/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3950 - recall: 0.3096 - val_loss: 0.4100 - val_recall: 0.2939\n",
      "Epoch 89/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3947 - recall: 0.3065 - val_loss: 0.4098 - val_recall: 0.2879\n",
      "Epoch 90/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3943 - recall: 0.3026 - val_loss: 0.4099 - val_recall: 0.3091\n",
      "Epoch 91/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3938 - recall: 0.3181 - val_loss: 0.4095 - val_recall: 0.2788\n",
      "Epoch 92/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3938 - recall: 0.3065 - val_loss: 0.4093 - val_recall: 0.2970\n",
      "Epoch 93/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3935 - recall: 0.3088 - val_loss: 0.4091 - val_recall: 0.2970\n",
      "Epoch 94/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3931 - recall: 0.3150 - val_loss: 0.4089 - val_recall: 0.2909\n",
      "Epoch 95/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3928 - recall: 0.3034 - val_loss: 0.4088 - val_recall: 0.3000\n",
      "Epoch 96/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3924 - recall: 0.3189 - val_loss: 0.4086 - val_recall: 0.2848\n",
      "Epoch 97/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3921 - recall: 0.3135 - val_loss: 0.4083 - val_recall: 0.2939\n",
      "Epoch 98/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3918 - recall: 0.3111 - val_loss: 0.4082 - val_recall: 0.3182\n",
      "Epoch 99/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3915 - recall: 0.3228 - val_loss: 0.4080 - val_recall: 0.2879\n",
      "Epoch 100/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3912 - recall: 0.3111 - val_loss: 0.4077 - val_recall: 0.3000\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(X_train, y_train, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 1s 3ms/step - loss: 0.3932 - recall: 0.3108\n"
     ]
    }
   ],
   "source": [
    "score1 = model1.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200/200 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred1 = model1.predict(X_train)\n",
    "y_train_pred1 = (y_train_pred1 > 0.5)\n",
    "y_train_pred1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [ True],\n",
       "       [False],\n",
       "       ...,\n",
       "       [False],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred1 = model1.predict(X_val)\n",
    "y_val_pred1 = (y_val_pred1 > 0.5)\n",
    "y_val_pred1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name = \"Model 1 SDG\"\n",
    "\n",
    "train_metric_df.loc[model_name] = recall_score(y_train,y_train_pred1)\n",
    "valid_metric_df.loc[model_name] = recall_score(y_val,y_val_pred1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.85      0.97      0.90      5108\n",
      "           1       0.71      0.31      0.44      1292\n",
      "\n",
      "    accuracy                           0.84      6400\n",
      "   macro avg       0.78      0.64      0.67      6400\n",
      "weighted avg       0.82      0.84      0.81      6400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_1_1 = classification_report(y_train, y_train_pred1)\n",
    "print(cr_1_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.84      0.97      0.90      1270\n",
      "           1       0.69      0.30      0.42       330\n",
      "\n",
      "    accuracy                           0.83      1600\n",
      "   macro avg       0.77      0.63      0.66      1600\n",
      "weighted avg       0.81      0.83      0.80      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_1_2 = classification_report(y_val, y_val_pred1)\n",
    "print(cr_1_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train, y_train_pred1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ygzPHkE_Anaw"
   },
   "source": [
    "## Model Performance Improvement"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EcEiT7Vyc6Y0"
   },
   "source": [
    "### Neural Network with Adam Optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "id": "_5anPDAru0Vq"
   },
   "outputs": [],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model2 = Sequential()\n",
    "model2.add(Dense(64, activation=\"relu\", input_dim = X_train.shape[1]))\n",
    "model2.add(Dense(64, activation=\"relu\"))\n",
    "model2.add(Dense(1, activation=\"sigmoid\"))\n",
    "model2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.Adam(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model2.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "640/640 [==============================] - 3s 3ms/step - loss: 0.4386 - recall: 0.1687 - val_loss: 0.4212 - val_recall: 0.3848\n",
      "Epoch 2/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4009 - recall: 0.3065 - val_loss: 0.4065 - val_recall: 0.3727\n",
      "Epoch 3/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3796 - recall: 0.3599 - val_loss: 0.3977 - val_recall: 0.3303\n",
      "Epoch 4/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.3638 - recall: 0.4040 - val_loss: 0.3821 - val_recall: 0.4152\n",
      "Epoch 5/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3501 - recall: 0.4412 - val_loss: 0.3805 - val_recall: 0.5000\n",
      "Epoch 6/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3392 - recall: 0.4481 - val_loss: 0.4017 - val_recall: 0.5758\n",
      "Epoch 7/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3325 - recall: 0.4752 - val_loss: 0.3743 - val_recall: 0.4182\n",
      "Epoch 8/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3257 - recall: 0.4822 - val_loss: 0.3841 - val_recall: 0.4818\n",
      "Epoch 9/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3241 - recall: 0.4946 - val_loss: 0.3693 - val_recall: 0.4515\n",
      "Epoch 10/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3209 - recall: 0.5015 - val_loss: 0.3748 - val_recall: 0.4515\n",
      "Epoch 11/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3180 - recall: 0.4961 - val_loss: 0.3690 - val_recall: 0.4394\n",
      "Epoch 12/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.3139 - recall: 0.5163 - val_loss: 0.3730 - val_recall: 0.4212\n",
      "Epoch 13/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3128 - recall: 0.5077 - val_loss: 0.3729 - val_recall: 0.4030\n",
      "Epoch 14/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3111 - recall: 0.5062 - val_loss: 0.3638 - val_recall: 0.4424\n",
      "Epoch 15/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3083 - recall: 0.5170 - val_loss: 0.3797 - val_recall: 0.5121\n",
      "Epoch 16/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3048 - recall: 0.5217 - val_loss: 0.3736 - val_recall: 0.4333\n",
      "Epoch 17/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3051 - recall: 0.5163 - val_loss: 0.3685 - val_recall: 0.4667\n",
      "Epoch 18/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3023 - recall: 0.5224 - val_loss: 0.3672 - val_recall: 0.4848\n",
      "Epoch 19/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.3005 - recall: 0.5325 - val_loss: 0.3682 - val_recall: 0.5030\n",
      "Epoch 20/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.2975 - recall: 0.5395 - val_loss: 0.3895 - val_recall: 0.5182\n",
      "Epoch 21/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2950 - recall: 0.5410 - val_loss: 0.3885 - val_recall: 0.5697\n",
      "Epoch 22/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2913 - recall: 0.5503 - val_loss: 0.3838 - val_recall: 0.5182\n",
      "Epoch 23/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2928 - recall: 0.5573 - val_loss: 0.3785 - val_recall: 0.4242\n",
      "Epoch 24/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2903 - recall: 0.5395 - val_loss: 0.3721 - val_recall: 0.5030\n",
      "Epoch 25/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2866 - recall: 0.5511 - val_loss: 0.3840 - val_recall: 0.5061\n",
      "Epoch 26/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2858 - recall: 0.5526 - val_loss: 0.3841 - val_recall: 0.5121\n",
      "Epoch 27/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2840 - recall: 0.5611 - val_loss: 0.3978 - val_recall: 0.4485\n",
      "Epoch 28/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.2813 - recall: 0.5588 - val_loss: 0.3929 - val_recall: 0.5030\n",
      "Epoch 29/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2804 - recall: 0.5689 - val_loss: 0.3877 - val_recall: 0.4697\n",
      "Epoch 30/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2804 - recall: 0.5681 - val_loss: 0.3897 - val_recall: 0.4455\n",
      "Epoch 31/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2778 - recall: 0.5650 - val_loss: 0.3861 - val_recall: 0.4758\n",
      "Epoch 32/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2763 - recall: 0.5697 - val_loss: 0.3932 - val_recall: 0.4848\n",
      "Epoch 33/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2725 - recall: 0.5813 - val_loss: 0.4005 - val_recall: 0.5182\n",
      "Epoch 34/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2728 - recall: 0.5720 - val_loss: 0.4032 - val_recall: 0.5303\n",
      "Epoch 35/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2685 - recall: 0.5875 - val_loss: 0.4182 - val_recall: 0.4000\n",
      "Epoch 36/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2681 - recall: 0.5844 - val_loss: 0.4023 - val_recall: 0.4909\n",
      "Epoch 37/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2660 - recall: 0.5960 - val_loss: 0.4092 - val_recall: 0.4788\n",
      "Epoch 38/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2654 - recall: 0.6029 - val_loss: 0.4061 - val_recall: 0.4818\n",
      "Epoch 39/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2609 - recall: 0.6053 - val_loss: 0.4240 - val_recall: 0.4909\n",
      "Epoch 40/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2615 - recall: 0.6037 - val_loss: 0.4163 - val_recall: 0.4697\n",
      "Epoch 41/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2607 - recall: 0.5921 - val_loss: 0.4157 - val_recall: 0.5788\n",
      "Epoch 42/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2588 - recall: 0.6146 - val_loss: 0.4037 - val_recall: 0.4697\n",
      "Epoch 43/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2554 - recall: 0.6099 - val_loss: 0.4137 - val_recall: 0.5000\n",
      "Epoch 44/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.2544 - recall: 0.6099 - val_loss: 0.4235 - val_recall: 0.4758\n",
      "Epoch 45/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2512 - recall: 0.6068 - val_loss: 0.4358 - val_recall: 0.5848\n",
      "Epoch 46/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2498 - recall: 0.6192 - val_loss: 0.4217 - val_recall: 0.5212\n",
      "Epoch 47/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2479 - recall: 0.6324 - val_loss: 0.4277 - val_recall: 0.4636\n",
      "Epoch 48/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2462 - recall: 0.6324 - val_loss: 0.4357 - val_recall: 0.4879\n",
      "Epoch 49/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2436 - recall: 0.6362 - val_loss: 0.4293 - val_recall: 0.4848\n",
      "Epoch 50/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2423 - recall: 0.6347 - val_loss: 0.4282 - val_recall: 0.5212\n",
      "Epoch 51/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2404 - recall: 0.6424 - val_loss: 0.4470 - val_recall: 0.4576\n",
      "Epoch 52/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.2401 - recall: 0.6393 - val_loss: 0.4394 - val_recall: 0.4697\n",
      "Epoch 53/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2346 - recall: 0.6502 - val_loss: 0.4493 - val_recall: 0.4424\n",
      "Epoch 54/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2336 - recall: 0.6440 - val_loss: 0.4551 - val_recall: 0.5030\n",
      "Epoch 55/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2326 - recall: 0.6587 - val_loss: 0.4317 - val_recall: 0.4970\n",
      "Epoch 56/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2315 - recall: 0.6517 - val_loss: 0.4477 - val_recall: 0.4758\n",
      "Epoch 57/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2304 - recall: 0.6471 - val_loss: 0.4579 - val_recall: 0.5303\n",
      "Epoch 58/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2253 - recall: 0.6625 - val_loss: 0.4519 - val_recall: 0.5485\n",
      "Epoch 59/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2248 - recall: 0.6734 - val_loss: 0.4598 - val_recall: 0.4848\n",
      "Epoch 60/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.2235 - recall: 0.6633 - val_loss: 0.4585 - val_recall: 0.4939\n",
      "Epoch 61/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2197 - recall: 0.6726 - val_loss: 0.4689 - val_recall: 0.5333\n",
      "Epoch 62/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2182 - recall: 0.6757 - val_loss: 0.4687 - val_recall: 0.5606\n",
      "Epoch 63/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2171 - recall: 0.6873 - val_loss: 0.4751 - val_recall: 0.5485\n",
      "Epoch 64/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2133 - recall: 0.6896 - val_loss: 0.4715 - val_recall: 0.5364\n",
      "Epoch 65/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2145 - recall: 0.6920 - val_loss: 0.4880 - val_recall: 0.4970\n",
      "Epoch 66/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2101 - recall: 0.6850 - val_loss: 0.4973 - val_recall: 0.5788\n",
      "Epoch 67/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2115 - recall: 0.6881 - val_loss: 0.4865 - val_recall: 0.5212\n",
      "Epoch 68/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2083 - recall: 0.7059 - val_loss: 0.4829 - val_recall: 0.4909\n",
      "Epoch 69/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2065 - recall: 0.6881 - val_loss: 0.4834 - val_recall: 0.5000\n",
      "Epoch 70/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2042 - recall: 0.6873 - val_loss: 0.5190 - val_recall: 0.5909\n",
      "Epoch 71/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2018 - recall: 0.7121 - val_loss: 0.5010 - val_recall: 0.5394\n",
      "Epoch 72/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2000 - recall: 0.7113 - val_loss: 0.4992 - val_recall: 0.4606\n",
      "Epoch 73/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1979 - recall: 0.7159 - val_loss: 0.4935 - val_recall: 0.4485\n",
      "Epoch 74/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1962 - recall: 0.7206 - val_loss: 0.5291 - val_recall: 0.4424\n",
      "Epoch 75/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1956 - recall: 0.7175 - val_loss: 0.5094 - val_recall: 0.5515\n",
      "Epoch 76/100\n",
      "640/640 [==============================] - 2s 2ms/step - loss: 0.1929 - recall: 0.7345 - val_loss: 0.4973 - val_recall: 0.5061\n",
      "Epoch 77/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1891 - recall: 0.7337 - val_loss: 0.5165 - val_recall: 0.4848\n",
      "Epoch 78/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1887 - recall: 0.7291 - val_loss: 0.5238 - val_recall: 0.4030\n",
      "Epoch 79/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1901 - recall: 0.7260 - val_loss: 0.5173 - val_recall: 0.5152\n",
      "Epoch 80/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1853 - recall: 0.7469 - val_loss: 0.5411 - val_recall: 0.4303\n",
      "Epoch 81/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1856 - recall: 0.7307 - val_loss: 0.5296 - val_recall: 0.4727\n",
      "Epoch 82/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1848 - recall: 0.7283 - val_loss: 0.5221 - val_recall: 0.4970\n",
      "Epoch 83/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1793 - recall: 0.7593 - val_loss: 0.5383 - val_recall: 0.5121\n",
      "Epoch 84/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1812 - recall: 0.7252 - val_loss: 0.5393 - val_recall: 0.5606\n",
      "Epoch 85/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1775 - recall: 0.7562 - val_loss: 0.5490 - val_recall: 0.4939\n",
      "Epoch 86/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1741 - recall: 0.7608 - val_loss: 0.5709 - val_recall: 0.5030\n",
      "Epoch 87/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1788 - recall: 0.7570 - val_loss: 0.5444 - val_recall: 0.5182\n",
      "Epoch 88/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1737 - recall: 0.7608 - val_loss: 0.5673 - val_recall: 0.5333\n",
      "Epoch 89/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1725 - recall: 0.7570 - val_loss: 0.5704 - val_recall: 0.4758\n",
      "Epoch 90/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1682 - recall: 0.7647 - val_loss: 0.5772 - val_recall: 0.4939\n",
      "Epoch 91/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1685 - recall: 0.7485 - val_loss: 0.5592 - val_recall: 0.5424\n",
      "Epoch 92/100\n",
      "640/640 [==============================] - 1s 2ms/step - loss: 0.1648 - recall: 0.7740 - val_loss: 0.5707 - val_recall: 0.5061\n",
      "Epoch 93/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1642 - recall: 0.7647 - val_loss: 0.5880 - val_recall: 0.4818\n",
      "Epoch 94/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1654 - recall: 0.7701 - val_loss: 0.5882 - val_recall: 0.5182\n",
      "Epoch 95/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1619 - recall: 0.7755 - val_loss: 0.5839 - val_recall: 0.5667\n",
      "Epoch 96/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1594 - recall: 0.7910 - val_loss: 0.5825 - val_recall: 0.5182\n",
      "Epoch 97/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1612 - recall: 0.7717 - val_loss: 0.5991 - val_recall: 0.4576\n",
      "Epoch 98/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.1591 - recall: 0.7732 - val_loss: 0.6052 - val_recall: 0.4697\n",
      "Epoch 99/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1548 - recall: 0.7949 - val_loss: 0.6079 - val_recall: 0.4606\n",
      "Epoch 100/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.1544 - recall: 0.7872 - val_loss: 0.6327 - val_recall: 0.4545\n"
     ]
    }
   ],
   "source": [
    "history = model2.fit(X_train, y_train, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 0s 2ms/step - loss: 0.5688 - recall: 0.4699\n"
     ]
    }
   ],
   "source": [
    "score2 = model2.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200/200 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred2 = model2.predict(X_train)\n",
    "y_train_pred2 = (y_train_pred2 > 0.5)\n",
    "y_train_pred2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 2ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred2 = model2.predict(X_val)\n",
    "y_val_pred2 = (y_val_pred2 > 0.5)\n",
    "y_val_pred2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name2 = \"Model 2 Adam\"\n",
    "\n",
    "train_metric_df.loc[model_name2] = recall_score(y_train,y_train_pred2)\n",
    "valid_metric_df.loc[model_name2] = recall_score(y_val,y_val_pred2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.94      0.99      0.96      5108\n",
      "           1       0.94      0.74      0.83      1292\n",
      "\n",
      "    accuracy                           0.94      6400\n",
      "   macro avg       0.94      0.86      0.89      6400\n",
      "weighted avg       0.94      0.94      0.93      6400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_2_1 = classification_report(y_train, y_train_pred2)\n",
    "print(cr_2_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.87      0.93      0.90      1270\n",
      "           1       0.62      0.45      0.52       330\n",
      "\n",
      "    accuracy                           0.83      1600\n",
      "   macro avg       0.74      0.69      0.71      1600\n",
      "weighted avg       0.82      0.83      0.82      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_2_2 = classification_report(y_val, y_val_pred2)\n",
    "print(cr_2_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train, y_train_pred2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "I-86J6fRu0vu"
   },
   "source": [
    "### Neural Network with Adam Optimizer and Dropout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "id": "2WkE_mqIu0SP"
   },
   "outputs": [],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dropout (Dropout)           (None, 64)                0         \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dropout_1 (Dropout)         (None, 64)                0         \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model3 = Sequential()\n",
    "model3.add(Dense(64, activation=\"relu\", input_dim = X_train.shape[1]))\n",
    "model3.add(Dropout(0.2))\n",
    "model3.add(Dense(64, activation=\"relu\"))\n",
    "model3.add(Dropout(0.2))\n",
    "model3.add(Dense(1, activation=\"sigmoid\"))\n",
    "model3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.Adam(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model3.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.4583 - recall: 0.1207 - val_loss: 0.4239 - val_recall: 0.2364\n",
      "Epoch 2/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4243 - recall: 0.2353 - val_loss: 0.4180 - val_recall: 0.3152\n",
      "Epoch 3/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4126 - recall: 0.2817 - val_loss: 0.4116 - val_recall: 0.2455\n",
      "Epoch 4/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.4007 - recall: 0.3289 - val_loss: 0.3990 - val_recall: 0.3273\n",
      "Epoch 5/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3886 - recall: 0.3506 - val_loss: 0.3915 - val_recall: 0.3818\n",
      "Epoch 6/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3773 - recall: 0.3854 - val_loss: 0.3903 - val_recall: 0.4333\n",
      "Epoch 7/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3683 - recall: 0.4009 - val_loss: 0.3861 - val_recall: 0.3455\n",
      "Epoch 8/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3641 - recall: 0.4180 - val_loss: 0.3819 - val_recall: 0.4212\n",
      "Epoch 9/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3550 - recall: 0.4187 - val_loss: 0.3695 - val_recall: 0.4091\n",
      "Epoch 10/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3505 - recall: 0.4443 - val_loss: 0.3699 - val_recall: 0.4152\n",
      "Epoch 11/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3484 - recall: 0.4420 - val_loss: 0.3606 - val_recall: 0.4364\n",
      "Epoch 12/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3433 - recall: 0.4621 - val_loss: 0.3639 - val_recall: 0.4091\n",
      "Epoch 13/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3408 - recall: 0.4613 - val_loss: 0.3676 - val_recall: 0.3576\n",
      "Epoch 14/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3352 - recall: 0.4698 - val_loss: 0.3604 - val_recall: 0.4152\n",
      "Epoch 15/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3362 - recall: 0.4752 - val_loss: 0.3643 - val_recall: 0.4697\n",
      "Epoch 16/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3321 - recall: 0.4814 - val_loss: 0.3567 - val_recall: 0.4455\n",
      "Epoch 17/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3323 - recall: 0.4644 - val_loss: 0.3579 - val_recall: 0.4364\n",
      "Epoch 18/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3289 - recall: 0.4814 - val_loss: 0.3589 - val_recall: 0.4515\n",
      "Epoch 19/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3352 - recall: 0.4721 - val_loss: 0.3598 - val_recall: 0.4364\n",
      "Epoch 20/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3248 - recall: 0.4776 - val_loss: 0.3662 - val_recall: 0.4636\n",
      "Epoch 21/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3265 - recall: 0.4884 - val_loss: 0.3701 - val_recall: 0.4727\n",
      "Epoch 22/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3298 - recall: 0.4837 - val_loss: 0.3650 - val_recall: 0.4758\n",
      "Epoch 23/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3266 - recall: 0.4861 - val_loss: 0.3647 - val_recall: 0.4303\n",
      "Epoch 24/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3252 - recall: 0.4799 - val_loss: 0.3591 - val_recall: 0.4606\n",
      "Epoch 25/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3233 - recall: 0.4822 - val_loss: 0.3616 - val_recall: 0.4333\n",
      "Epoch 26/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3248 - recall: 0.4853 - val_loss: 0.3592 - val_recall: 0.4667\n",
      "Epoch 27/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3258 - recall: 0.4868 - val_loss: 0.3622 - val_recall: 0.4424\n",
      "Epoch 28/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3209 - recall: 0.4853 - val_loss: 0.3642 - val_recall: 0.4606\n",
      "Epoch 29/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3186 - recall: 0.4992 - val_loss: 0.3671 - val_recall: 0.4515\n",
      "Epoch 30/100\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.3178 - recall: 0.4930 - val_loss: 0.3632 - val_recall: 0.4485\n",
      "Epoch 31/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3218 - recall: 0.5039 - val_loss: 0.3618 - val_recall: 0.4485\n",
      "Epoch 32/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3234 - recall: 0.5015 - val_loss: 0.3617 - val_recall: 0.4697\n",
      "Epoch 33/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3174 - recall: 0.4992 - val_loss: 0.3649 - val_recall: 0.4879\n",
      "Epoch 34/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3203 - recall: 0.4954 - val_loss: 0.3646 - val_recall: 0.4818\n",
      "Epoch 35/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3162 - recall: 0.5015 - val_loss: 0.3683 - val_recall: 0.4121\n",
      "Epoch 36/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3147 - recall: 0.4992 - val_loss: 0.3691 - val_recall: 0.4394\n",
      "Epoch 37/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3156 - recall: 0.4899 - val_loss: 0.3702 - val_recall: 0.4303\n",
      "Epoch 38/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3177 - recall: 0.5070 - val_loss: 0.3601 - val_recall: 0.4424\n",
      "Epoch 39/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3189 - recall: 0.4876 - val_loss: 0.3696 - val_recall: 0.4667\n",
      "Epoch 40/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3177 - recall: 0.5000 - val_loss: 0.3688 - val_recall: 0.4424\n",
      "Epoch 41/100\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.3145 - recall: 0.5015 - val_loss: 0.3658 - val_recall: 0.4909\n",
      "Epoch 42/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3112 - recall: 0.5217 - val_loss: 0.3689 - val_recall: 0.4485\n",
      "Epoch 43/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3130 - recall: 0.5046 - val_loss: 0.3735 - val_recall: 0.4333\n",
      "Epoch 44/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3119 - recall: 0.5101 - val_loss: 0.3759 - val_recall: 0.4121\n",
      "Epoch 45/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3062 - recall: 0.5217 - val_loss: 0.3702 - val_recall: 0.4788\n",
      "Epoch 46/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3109 - recall: 0.5132 - val_loss: 0.3677 - val_recall: 0.4606\n",
      "Epoch 47/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3070 - recall: 0.5201 - val_loss: 0.3771 - val_recall: 0.4061\n",
      "Epoch 48/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3073 - recall: 0.5201 - val_loss: 0.3722 - val_recall: 0.4667\n",
      "Epoch 49/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3061 - recall: 0.5093 - val_loss: 0.3668 - val_recall: 0.4303\n",
      "Epoch 50/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3045 - recall: 0.5163 - val_loss: 0.3676 - val_recall: 0.4606\n",
      "Epoch 51/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3043 - recall: 0.5248 - val_loss: 0.3665 - val_recall: 0.4788\n",
      "Epoch 52/100\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.3062 - recall: 0.5271 - val_loss: 0.3725 - val_recall: 0.4273\n",
      "Epoch 53/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3063 - recall: 0.5170 - val_loss: 0.3714 - val_recall: 0.4121\n",
      "Epoch 54/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3078 - recall: 0.5248 - val_loss: 0.3694 - val_recall: 0.4697\n",
      "Epoch 55/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3056 - recall: 0.5224 - val_loss: 0.3722 - val_recall: 0.4424\n",
      "Epoch 56/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3029 - recall: 0.5271 - val_loss: 0.3660 - val_recall: 0.4424\n",
      "Epoch 57/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3014 - recall: 0.5186 - val_loss: 0.3695 - val_recall: 0.4455\n",
      "Epoch 58/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3011 - recall: 0.5209 - val_loss: 0.3750 - val_recall: 0.4848\n",
      "Epoch 59/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3073 - recall: 0.5333 - val_loss: 0.3750 - val_recall: 0.4545\n",
      "Epoch 60/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3083 - recall: 0.5132 - val_loss: 0.3714 - val_recall: 0.4576\n",
      "Epoch 61/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3001 - recall: 0.5178 - val_loss: 0.3752 - val_recall: 0.4455\n",
      "Epoch 62/100\n",
      "640/640 [==============================] - 3s 4ms/step - loss: 0.3002 - recall: 0.5201 - val_loss: 0.3796 - val_recall: 0.4636\n",
      "Epoch 63/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.3032 - recall: 0.5271 - val_loss: 0.3755 - val_recall: 0.4667\n",
      "Epoch 64/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.3015 - recall: 0.5279 - val_loss: 0.3819 - val_recall: 0.4455\n",
      "Epoch 65/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2984 - recall: 0.5387 - val_loss: 0.3762 - val_recall: 0.4515\n",
      "Epoch 66/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2973 - recall: 0.5317 - val_loss: 0.3781 - val_recall: 0.4636\n",
      "Epoch 67/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2969 - recall: 0.5356 - val_loss: 0.3779 - val_recall: 0.4394\n",
      "Epoch 68/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2978 - recall: 0.5372 - val_loss: 0.3785 - val_recall: 0.4606\n",
      "Epoch 69/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2986 - recall: 0.5317 - val_loss: 0.3772 - val_recall: 0.4303\n",
      "Epoch 70/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2986 - recall: 0.5356 - val_loss: 0.3792 - val_recall: 0.4515\n",
      "Epoch 71/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2999 - recall: 0.5364 - val_loss: 0.3745 - val_recall: 0.4606\n",
      "Epoch 72/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2991 - recall: 0.5302 - val_loss: 0.3683 - val_recall: 0.4485\n",
      "Epoch 73/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2968 - recall: 0.5387 - val_loss: 0.3714 - val_recall: 0.4121\n",
      "Epoch 74/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2962 - recall: 0.5410 - val_loss: 0.3835 - val_recall: 0.4182\n",
      "Epoch 75/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2999 - recall: 0.5163 - val_loss: 0.3737 - val_recall: 0.4485\n",
      "Epoch 76/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2986 - recall: 0.5372 - val_loss: 0.3734 - val_recall: 0.4364\n",
      "Epoch 77/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2960 - recall: 0.5310 - val_loss: 0.3809 - val_recall: 0.4515\n",
      "Epoch 78/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2954 - recall: 0.5364 - val_loss: 0.3757 - val_recall: 0.4364\n",
      "Epoch 79/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2901 - recall: 0.5333 - val_loss: 0.3808 - val_recall: 0.4758\n",
      "Epoch 80/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2940 - recall: 0.5495 - val_loss: 0.3808 - val_recall: 0.4485\n",
      "Epoch 81/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2923 - recall: 0.5387 - val_loss: 0.3808 - val_recall: 0.4576\n",
      "Epoch 82/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2901 - recall: 0.5604 - val_loss: 0.3734 - val_recall: 0.4242\n",
      "Epoch 83/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2909 - recall: 0.5526 - val_loss: 0.3806 - val_recall: 0.4273\n",
      "Epoch 84/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2930 - recall: 0.5441 - val_loss: 0.3773 - val_recall: 0.4667\n",
      "Epoch 85/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2922 - recall: 0.5410 - val_loss: 0.3788 - val_recall: 0.4424\n",
      "Epoch 86/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2869 - recall: 0.5519 - val_loss: 0.3781 - val_recall: 0.4515\n",
      "Epoch 87/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2917 - recall: 0.5387 - val_loss: 0.3790 - val_recall: 0.4667\n",
      "Epoch 88/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2962 - recall: 0.5464 - val_loss: 0.3812 - val_recall: 0.4485\n",
      "Epoch 89/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2935 - recall: 0.5495 - val_loss: 0.3824 - val_recall: 0.4273\n",
      "Epoch 90/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2873 - recall: 0.5542 - val_loss: 0.3861 - val_recall: 0.4576\n",
      "Epoch 91/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2906 - recall: 0.5372 - val_loss: 0.3850 - val_recall: 0.4545\n",
      "Epoch 92/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2858 - recall: 0.5511 - val_loss: 0.3800 - val_recall: 0.4606\n",
      "Epoch 93/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2853 - recall: 0.5495 - val_loss: 0.3868 - val_recall: 0.4606\n",
      "Epoch 94/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2894 - recall: 0.5488 - val_loss: 0.3877 - val_recall: 0.4455\n",
      "Epoch 95/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2897 - recall: 0.5418 - val_loss: 0.3872 - val_recall: 0.4848\n",
      "Epoch 96/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2868 - recall: 0.5565 - val_loss: 0.3799 - val_recall: 0.4303\n",
      "Epoch 97/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2876 - recall: 0.5526 - val_loss: 0.3836 - val_recall: 0.4303\n",
      "Epoch 98/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2898 - recall: 0.5441 - val_loss: 0.3825 - val_recall: 0.4667\n",
      "Epoch 99/100\n",
      "640/640 [==============================] - 2s 4ms/step - loss: 0.2841 - recall: 0.5550 - val_loss: 0.3873 - val_recall: 0.4152\n",
      "Epoch 100/100\n",
      "640/640 [==============================] - 2s 3ms/step - loss: 0.2907 - recall: 0.5457 - val_loss: 0.3807 - val_recall: 0.4636\n"
     ]
    }
   ],
   "source": [
    "history = model3.fit(X_train, y_train, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 0s 2ms/step - loss: 0.3520 - recall: 0.4819\n"
     ]
    }
   ],
   "source": [
    "score3 = model3.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "200/200 [==============================] - 0s 2ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred3 = model3.predict(X_train)\n",
    "y_train_pred3 = (y_train_pred3 > 0.5)\n",
    "y_train_pred3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 2ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [ True],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred3 = model3.predict(X_val)\n",
    "y_val_pred3 = (y_val_pred3 > 0.5)\n",
    "y_val_pred3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name3 = \"Model 3 Adam w/ Dropout\"\n",
    "train_metric_df.loc[model_name3] = recall_score(y_train,y_train_pred3)\n",
    "valid_metric_df.loc[model_name3] = recall_score(y_val,y_val_pred3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.90      0.98      0.94      5108\n",
      "           1       0.88      0.58      0.70      1292\n",
      "\n",
      "    accuracy                           0.90      6400\n",
      "   macro avg       0.89      0.78      0.82      6400\n",
      "weighted avg       0.90      0.90      0.89      6400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_3_1 = classification_report(y_train, y_train_pred3)\n",
    "print(cr_3_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.87      0.94      0.90      1270\n",
      "           1       0.67      0.46      0.55       330\n",
      "\n",
      "    accuracy                           0.84      1600\n",
      "   macro avg       0.77      0.70      0.73      1600\n",
      "weighted avg       0.83      0.84      0.83      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_3_2 = classification_report(y_val, y_val_pred3)\n",
    "print(cr_3_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train, y_train_pred3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "m1Hav_XNu6ro"
   },
   "source": [
    "### Neural Network with Balanced Data (by applying SMOTE) and SGD Optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "id": "vAHO1_vYu0DN"
   },
   "outputs": [],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "smote_var  = SMOTE(random_state=7)\n",
    "X_train_smote, y_train_smote= smote_var.fit_resample(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model4 = Sequential()\n",
    "model4.add(Dense(64, activation=\"relu\", input_dim = X_train_smote.shape[1]))\n",
    "model4.add(Dense(64, activation=\"relu\"))\n",
    "model4.add(Dense(1, activation=\"sigmoid\"))\n",
    "model4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.SGD(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model4.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.6933 - recall: 0.7825 - val_loss: 0.6676 - val_recall: 0.6182\n",
      "Epoch 2/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.6532 - recall: 0.5977 - val_loss: 0.6293 - val_recall: 0.6182\n",
      "Epoch 3/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.6274 - recall: 0.6182 - val_loss: 0.6138 - val_recall: 0.6727\n",
      "Epoch 4/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.6065 - recall: 0.6539 - val_loss: 0.5942 - val_recall: 0.6606\n",
      "Epoch 5/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5899 - recall: 0.6705 - val_loss: 0.5788 - val_recall: 0.6545\n",
      "Epoch 6/100\n",
      "1022/1022 [==============================] - 3s 2ms/step - loss: 0.5771 - recall: 0.6787 - val_loss: 0.5747 - val_recall: 0.6727\n",
      "Epoch 7/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5674 - recall: 0.6936 - val_loss: 0.5632 - val_recall: 0.6606\n",
      "Epoch 8/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.5601 - recall: 0.6944 - val_loss: 0.5566 - val_recall: 0.6606\n",
      "Epoch 9/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5543 - recall: 0.6960 - val_loss: 0.5631 - val_recall: 0.6727\n",
      "Epoch 10/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5496 - recall: 0.7044 - val_loss: 0.5596 - val_recall: 0.6727\n",
      "Epoch 11/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5457 - recall: 0.7077 - val_loss: 0.5502 - val_recall: 0.6697\n",
      "Epoch 12/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5424 - recall: 0.7134 - val_loss: 0.5462 - val_recall: 0.6727\n",
      "Epoch 13/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5396 - recall: 0.7116 - val_loss: 0.5507 - val_recall: 0.6788\n",
      "Epoch 14/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5372 - recall: 0.7155 - val_loss: 0.5493 - val_recall: 0.6758\n",
      "Epoch 15/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5350 - recall: 0.7183 - val_loss: 0.5501 - val_recall: 0.6848\n",
      "Epoch 16/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5329 - recall: 0.7173 - val_loss: 0.5630 - val_recall: 0.7061\n",
      "Epoch 17/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5313 - recall: 0.7261 - val_loss: 0.5458 - val_recall: 0.6848\n",
      "Epoch 18/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.5295 - recall: 0.7210 - val_loss: 0.5455 - val_recall: 0.6848\n",
      "Epoch 19/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5279 - recall: 0.7230 - val_loss: 0.5497 - val_recall: 0.6909\n",
      "Epoch 20/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.5264 - recall: 0.7267 - val_loss: 0.5435 - val_recall: 0.6818\n",
      "Epoch 21/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.5249 - recall: 0.7265 - val_loss: 0.5389 - val_recall: 0.6788\n",
      "Epoch 22/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5236 - recall: 0.7277 - val_loss: 0.5449 - val_recall: 0.6879\n",
      "Epoch 23/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5222 - recall: 0.7289 - val_loss: 0.5479 - val_recall: 0.6970\n",
      "Epoch 24/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5210 - recall: 0.7306 - val_loss: 0.5466 - val_recall: 0.6848\n",
      "Epoch 25/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5197 - recall: 0.7332 - val_loss: 0.5451 - val_recall: 0.6848\n",
      "Epoch 26/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5183 - recall: 0.7324 - val_loss: 0.5552 - val_recall: 0.7091\n",
      "Epoch 27/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.5172 - recall: 0.7375 - val_loss: 0.5460 - val_recall: 0.6970\n",
      "Epoch 28/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5160 - recall: 0.7353 - val_loss: 0.5463 - val_recall: 0.7000\n",
      "Epoch 29/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.5148 - recall: 0.7406 - val_loss: 0.5362 - val_recall: 0.6848\n",
      "Epoch 30/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5137 - recall: 0.7371 - val_loss: 0.5458 - val_recall: 0.7061\n",
      "Epoch 31/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5123 - recall: 0.7424 - val_loss: 0.5395 - val_recall: 0.6939\n",
      "Epoch 32/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5113 - recall: 0.7383 - val_loss: 0.5438 - val_recall: 0.7061\n",
      "Epoch 33/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.5099 - recall: 0.7439 - val_loss: 0.5299 - val_recall: 0.6788\n",
      "Epoch 34/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5091 - recall: 0.7424 - val_loss: 0.5293 - val_recall: 0.6758\n",
      "Epoch 35/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5079 - recall: 0.7412 - val_loss: 0.5395 - val_recall: 0.7091\n",
      "Epoch 36/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5068 - recall: 0.7406 - val_loss: 0.5435 - val_recall: 0.7152\n",
      "Epoch 37/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5059 - recall: 0.7467 - val_loss: 0.5355 - val_recall: 0.6939\n",
      "Epoch 38/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5047 - recall: 0.7443 - val_loss: 0.5427 - val_recall: 0.7182\n",
      "Epoch 39/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5037 - recall: 0.7441 - val_loss: 0.5432 - val_recall: 0.7182\n",
      "Epoch 40/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.5027 - recall: 0.7451 - val_loss: 0.5377 - val_recall: 0.7061\n",
      "Epoch 41/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5016 - recall: 0.7447 - val_loss: 0.5354 - val_recall: 0.7091\n",
      "Epoch 42/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5004 - recall: 0.7463 - val_loss: 0.5348 - val_recall: 0.7061\n",
      "Epoch 43/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4994 - recall: 0.7478 - val_loss: 0.5221 - val_recall: 0.6818\n",
      "Epoch 44/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4983 - recall: 0.7459 - val_loss: 0.5335 - val_recall: 0.7061\n",
      "Epoch 45/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4971 - recall: 0.7480 - val_loss: 0.5344 - val_recall: 0.7121\n",
      "Epoch 46/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4960 - recall: 0.7482 - val_loss: 0.5367 - val_recall: 0.7152\n",
      "Epoch 47/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4948 - recall: 0.7533 - val_loss: 0.5219 - val_recall: 0.6848\n",
      "Epoch 48/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4938 - recall: 0.7498 - val_loss: 0.5265 - val_recall: 0.7000\n",
      "Epoch 49/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4926 - recall: 0.7480 - val_loss: 0.5430 - val_recall: 0.7273\n",
      "Epoch 50/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4915 - recall: 0.7551 - val_loss: 0.5361 - val_recall: 0.7182\n",
      "Epoch 51/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4901 - recall: 0.7565 - val_loss: 0.5211 - val_recall: 0.6909\n",
      "Epoch 52/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4889 - recall: 0.7522 - val_loss: 0.5236 - val_recall: 0.6939\n",
      "Epoch 53/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4877 - recall: 0.7555 - val_loss: 0.5169 - val_recall: 0.6909\n",
      "Epoch 54/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.4865 - recall: 0.7508 - val_loss: 0.5293 - val_recall: 0.7212\n",
      "Epoch 55/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4852 - recall: 0.7557 - val_loss: 0.5299 - val_recall: 0.7212\n",
      "Epoch 56/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4839 - recall: 0.7563 - val_loss: 0.5177 - val_recall: 0.6970\n",
      "Epoch 57/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4826 - recall: 0.7563 - val_loss: 0.5194 - val_recall: 0.7061\n",
      "Epoch 58/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4812 - recall: 0.7567 - val_loss: 0.5163 - val_recall: 0.7061\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 59/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4797 - recall: 0.7582 - val_loss: 0.5335 - val_recall: 0.7333\n",
      "Epoch 60/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4785 - recall: 0.7610 - val_loss: 0.5348 - val_recall: 0.7333\n",
      "Epoch 61/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4771 - recall: 0.7619 - val_loss: 0.5185 - val_recall: 0.7182\n",
      "Epoch 62/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.4757 - recall: 0.7623 - val_loss: 0.5115 - val_recall: 0.7091\n",
      "Epoch 63/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4744 - recall: 0.7629 - val_loss: 0.5187 - val_recall: 0.7212\n",
      "Epoch 64/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4729 - recall: 0.7655 - val_loss: 0.5215 - val_recall: 0.7242\n",
      "Epoch 65/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4717 - recall: 0.7635 - val_loss: 0.5274 - val_recall: 0.7333\n",
      "Epoch 66/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4703 - recall: 0.7674 - val_loss: 0.5105 - val_recall: 0.7121\n",
      "Epoch 67/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4689 - recall: 0.7668 - val_loss: 0.5127 - val_recall: 0.7182\n",
      "Epoch 68/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4674 - recall: 0.7651 - val_loss: 0.5159 - val_recall: 0.7212\n",
      "Epoch 69/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4661 - recall: 0.7678 - val_loss: 0.5200 - val_recall: 0.7273\n",
      "Epoch 70/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4646 - recall: 0.7688 - val_loss: 0.5107 - val_recall: 0.7152\n",
      "Epoch 71/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4634 - recall: 0.7708 - val_loss: 0.5023 - val_recall: 0.7061\n",
      "Epoch 72/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4620 - recall: 0.7719 - val_loss: 0.5056 - val_recall: 0.7121\n",
      "Epoch 73/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4606 - recall: 0.7719 - val_loss: 0.5108 - val_recall: 0.7182\n",
      "Epoch 74/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.4593 - recall: 0.7743 - val_loss: 0.5070 - val_recall: 0.7152\n",
      "Epoch 75/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4580 - recall: 0.7749 - val_loss: 0.5102 - val_recall: 0.7212\n",
      "Epoch 76/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4566 - recall: 0.7766 - val_loss: 0.5046 - val_recall: 0.7212\n",
      "Epoch 77/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4554 - recall: 0.7739 - val_loss: 0.5184 - val_recall: 0.7485\n",
      "Epoch 78/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4542 - recall: 0.7770 - val_loss: 0.5060 - val_recall: 0.7303\n",
      "Epoch 79/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4528 - recall: 0.7796 - val_loss: 0.5145 - val_recall: 0.7485\n",
      "Epoch 80/100\n",
      "1022/1022 [==============================] - 3s 2ms/step - loss: 0.4516 - recall: 0.7800 - val_loss: 0.4997 - val_recall: 0.7273\n",
      "Epoch 81/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4504 - recall: 0.7800 - val_loss: 0.5098 - val_recall: 0.7455\n",
      "Epoch 82/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4492 - recall: 0.7801 - val_loss: 0.5086 - val_recall: 0.7455\n",
      "Epoch 83/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4477 - recall: 0.7827 - val_loss: 0.5080 - val_recall: 0.7455\n",
      "Epoch 84/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4468 - recall: 0.7821 - val_loss: 0.5115 - val_recall: 0.7485\n",
      "Epoch 85/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4457 - recall: 0.7841 - val_loss: 0.5028 - val_recall: 0.7455\n",
      "Epoch 86/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.4446 - recall: 0.7847 - val_loss: 0.5078 - val_recall: 0.7485\n",
      "Epoch 87/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4434 - recall: 0.7882 - val_loss: 0.4864 - val_recall: 0.7242\n",
      "Epoch 88/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4423 - recall: 0.7843 - val_loss: 0.5052 - val_recall: 0.7485\n",
      "Epoch 89/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4411 - recall: 0.7868 - val_loss: 0.5112 - val_recall: 0.7515\n",
      "Epoch 90/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4403 - recall: 0.7886 - val_loss: 0.4969 - val_recall: 0.7394\n",
      "Epoch 91/100\n",
      "1022/1022 [==============================] - 3s 2ms/step - loss: 0.4393 - recall: 0.7868 - val_loss: 0.4991 - val_recall: 0.7424\n",
      "Epoch 92/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4381 - recall: 0.7915 - val_loss: 0.4922 - val_recall: 0.7242\n",
      "Epoch 93/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.4370 - recall: 0.7905 - val_loss: 0.5091 - val_recall: 0.7606\n",
      "Epoch 94/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4362 - recall: 0.7950 - val_loss: 0.4818 - val_recall: 0.7182\n",
      "Epoch 95/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4354 - recall: 0.7917 - val_loss: 0.4829 - val_recall: 0.7182\n",
      "Epoch 96/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.4343 - recall: 0.7933 - val_loss: 0.4964 - val_recall: 0.7455\n",
      "Epoch 97/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4337 - recall: 0.7946 - val_loss: 0.4840 - val_recall: 0.7152\n",
      "Epoch 98/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4328 - recall: 0.7944 - val_loss: 0.4906 - val_recall: 0.7242\n",
      "Epoch 99/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4319 - recall: 0.7954 - val_loss: 0.4969 - val_recall: 0.7364\n",
      "Epoch 100/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.4311 - recall: 0.7976 - val_loss: 0.4793 - val_recall: 0.7152\n"
     ]
    }
   ],
   "source": [
    "history = model4.fit(X_train_smote, y_train_smote, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 0s 2ms/step - loss: 0.4460 - recall: 0.7301\n"
     ]
    }
   ],
   "source": [
    "score4 = model4.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "320/320 [==============================] - 1s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [ True],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred4 = model4.predict(X_train_smote)\n",
    "y_train_pred4 = (y_train_pred4 > 0.5)\n",
    "y_train_pred4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [ True],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred4 = model4.predict(X_val)\n",
    "y_val_pred4 = (y_val_pred4 > 0.5)\n",
    "y_val_pred4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name4 = \"Model 4 SDG w/ smote\"\n",
    "train_metric_df.loc[model_name4] = recall_score(y_train_smote,y_train_pred4)\n",
    "valid_metric_df.loc[model_name4] = recall_score(y_val,y_val_pred4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.78      0.82      0.80      5108\n",
      "           1       0.81      0.77      0.79      5108\n",
      "\n",
      "    accuracy                           0.80     10216\n",
      "   macro avg       0.80      0.80      0.80     10216\n",
      "weighted avg       0.80      0.80      0.80     10216\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_4_1 = classification_report(y_train_smote, y_train_pred4)\n",
    "print(cr_4_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.79      0.85      1270\n",
      "           1       0.47      0.72      0.57       330\n",
      "\n",
      "    accuracy                           0.77      1600\n",
      "   macro avg       0.69      0.75      0.71      1600\n",
      "weighted avg       0.82      0.77      0.79      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_4_2 = classification_report(y_val, y_val_pred4)\n",
    "print(cr_4_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train_smote, y_train_pred4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred4)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "sFhOUq6au-xp"
   },
   "source": [
    "### Neural Network with Balanced Data (by applying SMOTE) and Adam Optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "id": "8egmXgW0u-Q0"
   },
   "outputs": [],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "smote_var5  = SMOTE(random_state=7)\n",
    "X_train_smote5, y_train_smote5= smote_var5.fit_resample(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model5 = Sequential()\n",
    "model5.add(Dense(64, activation=\"relu\", input_dim = X_train_smote5.shape[1]))\n",
    "model5.add(Dense(64, activation=\"relu\"))\n",
    "model5.add(Dense(1, activation=\"sigmoid\"))\n",
    "model5.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.Adam(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model5.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5328 - recall: 0.7112 - val_loss: 0.5271 - val_recall: 0.7333\n",
      "Epoch 2/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4657 - recall: 0.7807 - val_loss: 0.4501 - val_recall: 0.6636\n",
      "Epoch 3/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4378 - recall: 0.7980 - val_loss: 0.5229 - val_recall: 0.7576\n",
      "Epoch 4/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.4192 - recall: 0.7986 - val_loss: 0.4474 - val_recall: 0.6667\n",
      "Epoch 5/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4076 - recall: 0.8091 - val_loss: 0.4091 - val_recall: 0.5939\n",
      "Epoch 6/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3958 - recall: 0.8134 - val_loss: 0.4909 - val_recall: 0.7333\n",
      "Epoch 7/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3889 - recall: 0.8175 - val_loss: 0.4820 - val_recall: 0.7333\n",
      "Epoch 8/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3822 - recall: 0.8260 - val_loss: 0.4740 - val_recall: 0.6788\n",
      "Epoch 9/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3760 - recall: 0.8293 - val_loss: 0.5912 - val_recall: 0.8182\n",
      "Epoch 10/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3689 - recall: 0.8365 - val_loss: 0.4878 - val_recall: 0.6909\n",
      "Epoch 11/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3631 - recall: 0.8344 - val_loss: 0.4444 - val_recall: 0.6394\n",
      "Epoch 12/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3547 - recall: 0.8420 - val_loss: 0.4261 - val_recall: 0.5970\n",
      "Epoch 13/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3486 - recall: 0.8475 - val_loss: 0.5169 - val_recall: 0.7212\n",
      "Epoch 14/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3441 - recall: 0.8532 - val_loss: 0.4946 - val_recall: 0.6939\n",
      "Epoch 15/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3374 - recall: 0.8569 - val_loss: 0.4752 - val_recall: 0.6455\n",
      "Epoch 16/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3330 - recall: 0.8616 - val_loss: 0.5353 - val_recall: 0.7212\n",
      "Epoch 17/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3261 - recall: 0.8655 - val_loss: 0.5290 - val_recall: 0.7273\n",
      "Epoch 18/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3254 - recall: 0.8677 - val_loss: 0.4972 - val_recall: 0.6848\n",
      "Epoch 19/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3211 - recall: 0.8626 - val_loss: 0.5258 - val_recall: 0.7091\n",
      "Epoch 20/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3127 - recall: 0.8724 - val_loss: 0.4689 - val_recall: 0.6424\n",
      "Epoch 21/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3110 - recall: 0.8712 - val_loss: 0.4521 - val_recall: 0.6364\n",
      "Epoch 22/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3066 - recall: 0.8757 - val_loss: 0.5063 - val_recall: 0.6788\n",
      "Epoch 23/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3037 - recall: 0.8765 - val_loss: 0.5118 - val_recall: 0.6727\n",
      "Epoch 24/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2976 - recall: 0.8814 - val_loss: 0.4985 - val_recall: 0.6576\n",
      "Epoch 25/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2948 - recall: 0.8839 - val_loss: 0.4855 - val_recall: 0.6242\n",
      "Epoch 26/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2908 - recall: 0.8816 - val_loss: 0.5232 - val_recall: 0.6848\n",
      "Epoch 27/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2886 - recall: 0.8833 - val_loss: 0.4916 - val_recall: 0.6242\n",
      "Epoch 28/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.2847 - recall: 0.8863 - val_loss: 0.5803 - val_recall: 0.7364\n",
      "Epoch 29/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2827 - recall: 0.8953 - val_loss: 0.5120 - val_recall: 0.6727\n",
      "Epoch 30/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2787 - recall: 0.8912 - val_loss: 0.5207 - val_recall: 0.6848\n",
      "Epoch 31/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2744 - recall: 0.8953 - val_loss: 0.4994 - val_recall: 0.5970\n",
      "Epoch 32/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.2707 - recall: 0.8917 - val_loss: 0.5367 - val_recall: 0.6424\n",
      "Epoch 33/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2707 - recall: 0.8929 - val_loss: 0.5226 - val_recall: 0.6333\n",
      "Epoch 34/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2680 - recall: 0.8955 - val_loss: 0.4779 - val_recall: 0.5636\n",
      "Epoch 35/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2630 - recall: 0.8974 - val_loss: 0.5296 - val_recall: 0.6333\n",
      "Epoch 36/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2607 - recall: 0.9007 - val_loss: 0.5496 - val_recall: 0.6606\n",
      "Epoch 37/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2552 - recall: 0.9039 - val_loss: 0.5202 - val_recall: 0.6091\n",
      "Epoch 38/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2581 - recall: 0.8992 - val_loss: 0.6379 - val_recall: 0.7545\n",
      "Epoch 39/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2508 - recall: 0.9051 - val_loss: 0.5956 - val_recall: 0.6333\n",
      "Epoch 40/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2499 - recall: 0.9060 - val_loss: 0.5417 - val_recall: 0.6485\n",
      "Epoch 41/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2491 - recall: 0.9060 - val_loss: 0.5473 - val_recall: 0.6242\n",
      "Epoch 42/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2446 - recall: 0.9111 - val_loss: 0.5334 - val_recall: 0.6030\n",
      "Epoch 43/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2404 - recall: 0.9119 - val_loss: 0.5482 - val_recall: 0.6030\n",
      "Epoch 44/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2397 - recall: 0.9094 - val_loss: 0.6331 - val_recall: 0.6939\n",
      "Epoch 45/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2385 - recall: 0.9121 - val_loss: 0.5637 - val_recall: 0.6455\n",
      "Epoch 46/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2325 - recall: 0.9143 - val_loss: 0.6021 - val_recall: 0.6636\n",
      "Epoch 47/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2311 - recall: 0.9141 - val_loss: 0.5480 - val_recall: 0.5909\n",
      "Epoch 48/100\n",
      "1022/1022 [==============================] - 3s 2ms/step - loss: 0.2322 - recall: 0.9137 - val_loss: 0.5377 - val_recall: 0.5636\n",
      "Epoch 49/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2294 - recall: 0.9144 - val_loss: 0.5859 - val_recall: 0.6545\n",
      "Epoch 50/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2242 - recall: 0.9193 - val_loss: 0.6229 - val_recall: 0.6545\n",
      "Epoch 51/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2226 - recall: 0.9203 - val_loss: 0.5846 - val_recall: 0.5909\n",
      "Epoch 52/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2206 - recall: 0.9203 - val_loss: 0.5710 - val_recall: 0.5606\n",
      "Epoch 53/100\n",
      "1022/1022 [==============================] - 3s 2ms/step - loss: 0.2197 - recall: 0.9227 - val_loss: 0.5889 - val_recall: 0.5970\n",
      "Epoch 54/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2175 - recall: 0.9205 - val_loss: 0.5801 - val_recall: 0.5879\n",
      "Epoch 55/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.2165 - recall: 0.9211 - val_loss: 0.5613 - val_recall: 0.5636\n",
      "Epoch 56/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2127 - recall: 0.9248 - val_loss: 0.5698 - val_recall: 0.5606\n",
      "Epoch 57/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2094 - recall: 0.9227 - val_loss: 0.6003 - val_recall: 0.6394\n",
      "Epoch 58/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2070 - recall: 0.9238 - val_loss: 0.6001 - val_recall: 0.5939\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 59/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2046 - recall: 0.9266 - val_loss: 0.6495 - val_recall: 0.6424\n",
      "Epoch 60/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2059 - recall: 0.9272 - val_loss: 0.5955 - val_recall: 0.6000\n",
      "Epoch 61/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.2002 - recall: 0.9297 - val_loss: 0.5897 - val_recall: 0.6030\n",
      "Epoch 62/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1974 - recall: 0.9278 - val_loss: 0.5945 - val_recall: 0.5970\n",
      "Epoch 63/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1983 - recall: 0.9287 - val_loss: 0.6581 - val_recall: 0.6545\n",
      "Epoch 64/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1924 - recall: 0.9336 - val_loss: 0.6495 - val_recall: 0.6727\n",
      "Epoch 65/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.1913 - recall: 0.9332 - val_loss: 0.6364 - val_recall: 0.6303\n",
      "Epoch 66/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1931 - recall: 0.9301 - val_loss: 0.7074 - val_recall: 0.6697\n",
      "Epoch 67/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1896 - recall: 0.9340 - val_loss: 0.6061 - val_recall: 0.5879\n",
      "Epoch 68/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1897 - recall: 0.9329 - val_loss: 0.6253 - val_recall: 0.5485\n",
      "Epoch 69/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1870 - recall: 0.9325 - val_loss: 0.6276 - val_recall: 0.5909\n",
      "Epoch 70/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1835 - recall: 0.9329 - val_loss: 0.6533 - val_recall: 0.6212\n",
      "Epoch 71/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1806 - recall: 0.9377 - val_loss: 0.6656 - val_recall: 0.6182\n",
      "Epoch 72/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1800 - recall: 0.9381 - val_loss: 0.6388 - val_recall: 0.5667\n",
      "Epoch 73/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1806 - recall: 0.9358 - val_loss: 0.6339 - val_recall: 0.5879\n",
      "Epoch 74/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1744 - recall: 0.9360 - val_loss: 0.6990 - val_recall: 0.6212\n",
      "Epoch 75/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1737 - recall: 0.9397 - val_loss: 0.6500 - val_recall: 0.5909\n",
      "Epoch 76/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1723 - recall: 0.9413 - val_loss: 0.6787 - val_recall: 0.6000\n",
      "Epoch 77/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1691 - recall: 0.9417 - val_loss: 0.7343 - val_recall: 0.6394\n",
      "Epoch 78/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1728 - recall: 0.9411 - val_loss: 0.6716 - val_recall: 0.6061\n",
      "Epoch 79/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.1692 - recall: 0.9409 - val_loss: 0.7065 - val_recall: 0.6303\n",
      "Epoch 80/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1677 - recall: 0.9383 - val_loss: 0.6961 - val_recall: 0.5879\n",
      "Epoch 81/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1635 - recall: 0.9417 - val_loss: 0.7121 - val_recall: 0.6303\n",
      "Epoch 82/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1643 - recall: 0.9438 - val_loss: 0.6843 - val_recall: 0.5364\n",
      "Epoch 83/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1639 - recall: 0.9448 - val_loss: 0.7163 - val_recall: 0.6000\n",
      "Epoch 84/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1578 - recall: 0.9458 - val_loss: 0.7198 - val_recall: 0.6182\n",
      "Epoch 85/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1557 - recall: 0.9475 - val_loss: 0.7228 - val_recall: 0.6000\n",
      "Epoch 86/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1608 - recall: 0.9448 - val_loss: 0.7293 - val_recall: 0.5970\n",
      "Epoch 87/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1519 - recall: 0.9497 - val_loss: 0.7632 - val_recall: 0.6061\n",
      "Epoch 88/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1545 - recall: 0.9466 - val_loss: 0.7399 - val_recall: 0.5394\n",
      "Epoch 89/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.1530 - recall: 0.9473 - val_loss: 0.7537 - val_recall: 0.6061\n",
      "Epoch 90/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1489 - recall: 0.9497 - val_loss: 0.7537 - val_recall: 0.5788\n",
      "Epoch 91/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1486 - recall: 0.9514 - val_loss: 0.7336 - val_recall: 0.5727\n",
      "Epoch 92/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1457 - recall: 0.9542 - val_loss: 0.7809 - val_recall: 0.5939\n",
      "Epoch 93/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1459 - recall: 0.9466 - val_loss: 0.8030 - val_recall: 0.6545\n",
      "Epoch 94/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1434 - recall: 0.9495 - val_loss: 0.8156 - val_recall: 0.6273\n",
      "Epoch 95/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1403 - recall: 0.9507 - val_loss: 0.7565 - val_recall: 0.5576\n",
      "Epoch 96/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.1420 - recall: 0.9509 - val_loss: 0.7951 - val_recall: 0.5970\n",
      "Epoch 97/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1390 - recall: 0.9522 - val_loss: 0.7756 - val_recall: 0.5758\n",
      "Epoch 98/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1362 - recall: 0.9546 - val_loss: 0.7943 - val_recall: 0.6091\n",
      "Epoch 99/100\n",
      "1022/1022 [==============================] - 2s 2ms/step - loss: 0.1369 - recall: 0.9524 - val_loss: 0.8190 - val_recall: 0.5848\n",
      "Epoch 100/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.1360 - recall: 0.9522 - val_loss: 0.7728 - val_recall: 0.5667\n"
     ]
    }
   ],
   "source": [
    "history = model5.fit(X_train_smote5, y_train_smote5, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 0s 1ms/step - loss: 0.7351 - recall: 0.5735\n"
     ]
    }
   ],
   "source": [
    "score5 = model5.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "320/320 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[ True],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [ True],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred5 = model5.predict(X_train_smote5)\n",
    "y_train_pred5 = (y_train_pred5 > 0.5)\n",
    "y_train_pred5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [ True],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred5 = model5.predict(X_val)\n",
    "y_val_pred5 = (y_val_pred5 > 0.5)\n",
    "y_val_pred5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name5 = \"Model 5 Adam w/ Smote\"\n",
    "train_metric_df.loc[model_name5] = recall_score(y_train_smote,y_train_pred5)\n",
    "valid_metric_df.loc[model_name5] = recall_score(y_val,y_val_pred5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.94      0.97      0.95      5108\n",
      "           1       0.96      0.94      0.95      5108\n",
      "\n",
      "    accuracy                           0.95     10216\n",
      "   macro avg       0.95      0.95      0.95     10216\n",
      "weighted avg       0.95      0.95      0.95     10216\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_5_1 = classification_report(y_train_smote5, y_train_pred5)\n",
    "print(cr_5_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.88      0.87      0.88      1270\n",
      "           1       0.52      0.57      0.54       330\n",
      "\n",
      "    accuracy                           0.80      1600\n",
      "   macro avg       0.70      0.72      0.71      1600\n",
      "weighted avg       0.81      0.80      0.81      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_5_2 = classification_report(y_val, y_val_pred5)\n",
    "print(cr_5_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train_smote5, y_train_pred5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "rTSK-_5YvBIR"
   },
   "source": [
    "### Neural Network with Balanced Data (by applying SMOTE), Adam Optimizer, and Dropout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {
    "id": "3Jqa4h2yuuE7"
   },
   "outputs": [],
   "source": [
    "backend.clear_session()\n",
    "np.random.seed(7)\n",
    "random.seed(7)\n",
    "tf.random.set_seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "smote_var6  = SMOTE(random_state=7)\n",
    "X_train_smote6, y_train_smote6= smote_var6.fit_resample(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense (Dense)               (None, 64)                768       \n",
      "                                                                 \n",
      " dropout (Dropout)           (None, 64)                0         \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 64)                4160      \n",
      "                                                                 \n",
      " dropout_1 (Dropout)         (None, 64)                0         \n",
      "                                                                 \n",
      " dense_2 (Dense)             (None, 1)                 65        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 4993 (19.50 KB)\n",
      "Trainable params: 4993 (19.50 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model6 = Sequential()\n",
    "model6.add(Dense(64, activation=\"relu\", input_dim = X_train_smote6.shape[1]))\n",
    "model6.add(Dropout(0.2))\n",
    "model6.add(Dense(64, activation=\"relu\"))\n",
    "model6.add(Dropout(0.2))\n",
    "model6.add(Dense(1, activation=\"sigmoid\"))\n",
    "model6.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "optimizer = tf.keras.optimizers.Adam(0.001)\n",
    "metric = keras.metrics.Recall()\n",
    "model6.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "1022/1022 [==============================] - 5s 4ms/step - loss: 0.5642 - recall: 0.6948 - val_loss: 0.5249 - val_recall: 0.6939\n",
      "Epoch 2/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.5102 - recall: 0.7500 - val_loss: 0.4810 - val_recall: 0.6818\n",
      "Epoch 3/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4814 - recall: 0.7649 - val_loss: 0.5307 - val_recall: 0.7515\n",
      "Epoch 4/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4615 - recall: 0.7778 - val_loss: 0.4683 - val_recall: 0.7000\n",
      "Epoch 5/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4480 - recall: 0.7727 - val_loss: 0.4258 - val_recall: 0.6727\n",
      "Epoch 6/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.4416 - recall: 0.7848 - val_loss: 0.4752 - val_recall: 0.7485\n",
      "Epoch 7/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4332 - recall: 0.7886 - val_loss: 0.4555 - val_recall: 0.7182\n",
      "Epoch 8/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4275 - recall: 0.7897 - val_loss: 0.4838 - val_recall: 0.7515\n",
      "Epoch 9/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4174 - recall: 0.7956 - val_loss: 0.4909 - val_recall: 0.7818\n",
      "Epoch 10/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.4146 - recall: 0.7999 - val_loss: 0.4944 - val_recall: 0.7576\n",
      "Epoch 11/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4149 - recall: 0.7995 - val_loss: 0.4554 - val_recall: 0.7121\n",
      "Epoch 12/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4082 - recall: 0.8076 - val_loss: 0.4330 - val_recall: 0.6697\n",
      "Epoch 13/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4069 - recall: 0.8023 - val_loss: 0.4717 - val_recall: 0.7364\n",
      "Epoch 14/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4051 - recall: 0.8054 - val_loss: 0.4814 - val_recall: 0.7394\n",
      "Epoch 15/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.4016 - recall: 0.8132 - val_loss: 0.4622 - val_recall: 0.7061\n",
      "Epoch 16/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3991 - recall: 0.8126 - val_loss: 0.5143 - val_recall: 0.7818\n",
      "Epoch 17/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3966 - recall: 0.8123 - val_loss: 0.4837 - val_recall: 0.7333\n",
      "Epoch 18/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3943 - recall: 0.8170 - val_loss: 0.4887 - val_recall: 0.7364\n",
      "Epoch 19/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3937 - recall: 0.8130 - val_loss: 0.4744 - val_recall: 0.7212\n",
      "Epoch 20/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3884 - recall: 0.8222 - val_loss: 0.4769 - val_recall: 0.6909\n",
      "Epoch 21/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3864 - recall: 0.8222 - val_loss: 0.4606 - val_recall: 0.7061\n",
      "Epoch 22/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3861 - recall: 0.8199 - val_loss: 0.4656 - val_recall: 0.6848\n",
      "Epoch 23/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3861 - recall: 0.8238 - val_loss: 0.4802 - val_recall: 0.7030\n",
      "Epoch 24/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3838 - recall: 0.8215 - val_loss: 0.4985 - val_recall: 0.7121\n",
      "Epoch 25/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3809 - recall: 0.8250 - val_loss: 0.4682 - val_recall: 0.6909\n",
      "Epoch 26/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3789 - recall: 0.8262 - val_loss: 0.4664 - val_recall: 0.6667\n",
      "Epoch 27/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3734 - recall: 0.8326 - val_loss: 0.4700 - val_recall: 0.7182\n",
      "Epoch 28/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3755 - recall: 0.8230 - val_loss: 0.4793 - val_recall: 0.7000\n",
      "Epoch 29/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3761 - recall: 0.8293 - val_loss: 0.4721 - val_recall: 0.7121\n",
      "Epoch 30/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3714 - recall: 0.8277 - val_loss: 0.4951 - val_recall: 0.7242\n",
      "Epoch 31/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3663 - recall: 0.8287 - val_loss: 0.4649 - val_recall: 0.6727\n",
      "Epoch 32/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3692 - recall: 0.8318 - val_loss: 0.4913 - val_recall: 0.6939\n",
      "Epoch 33/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3634 - recall: 0.8260 - val_loss: 0.4800 - val_recall: 0.6970\n",
      "Epoch 34/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3646 - recall: 0.8332 - val_loss: 0.4491 - val_recall: 0.6455\n",
      "Epoch 35/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3645 - recall: 0.8369 - val_loss: 0.4902 - val_recall: 0.7212\n",
      "Epoch 36/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3631 - recall: 0.8356 - val_loss: 0.4872 - val_recall: 0.7030\n",
      "Epoch 37/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3656 - recall: 0.8373 - val_loss: 0.5004 - val_recall: 0.7121\n",
      "Epoch 38/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3593 - recall: 0.8379 - val_loss: 0.4981 - val_recall: 0.7061\n",
      "Epoch 39/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3651 - recall: 0.8350 - val_loss: 0.4792 - val_recall: 0.6909\n",
      "Epoch 40/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3581 - recall: 0.8381 - val_loss: 0.4756 - val_recall: 0.6788\n",
      "Epoch 41/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3547 - recall: 0.8424 - val_loss: 0.4768 - val_recall: 0.7000\n",
      "Epoch 42/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3606 - recall: 0.8356 - val_loss: 0.4767 - val_recall: 0.6848\n",
      "Epoch 43/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3562 - recall: 0.8412 - val_loss: 0.4513 - val_recall: 0.6515\n",
      "Epoch 44/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3525 - recall: 0.8387 - val_loss: 0.5063 - val_recall: 0.7303\n",
      "Epoch 45/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3570 - recall: 0.8393 - val_loss: 0.4528 - val_recall: 0.6667\n",
      "Epoch 46/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3541 - recall: 0.8422 - val_loss: 0.4725 - val_recall: 0.6939\n",
      "Epoch 47/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3532 - recall: 0.8485 - val_loss: 0.4676 - val_recall: 0.6667\n",
      "Epoch 48/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3521 - recall: 0.8469 - val_loss: 0.4533 - val_recall: 0.6273\n",
      "Epoch 49/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3556 - recall: 0.8393 - val_loss: 0.4923 - val_recall: 0.7212\n",
      "Epoch 50/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3507 - recall: 0.8495 - val_loss: 0.4796 - val_recall: 0.6667\n",
      "Epoch 51/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3496 - recall: 0.8453 - val_loss: 0.4780 - val_recall: 0.6758\n",
      "Epoch 52/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3498 - recall: 0.8463 - val_loss: 0.4665 - val_recall: 0.6758\n",
      "Epoch 53/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3448 - recall: 0.8489 - val_loss: 0.4671 - val_recall: 0.6697\n",
      "Epoch 54/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3475 - recall: 0.8481 - val_loss: 0.4701 - val_recall: 0.6697\n",
      "Epoch 55/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3445 - recall: 0.8481 - val_loss: 0.4764 - val_recall: 0.6697\n",
      "Epoch 56/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3446 - recall: 0.8498 - val_loss: 0.4682 - val_recall: 0.6606\n",
      "Epoch 57/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3393 - recall: 0.8524 - val_loss: 0.4657 - val_recall: 0.6515\n",
      "Epoch 58/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3436 - recall: 0.8516 - val_loss: 0.4835 - val_recall: 0.6970\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 59/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3404 - recall: 0.8504 - val_loss: 0.4967 - val_recall: 0.7333\n",
      "Epoch 60/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3437 - recall: 0.8504 - val_loss: 0.4868 - val_recall: 0.6939\n",
      "Epoch 61/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3409 - recall: 0.8510 - val_loss: 0.4573 - val_recall: 0.6576\n",
      "Epoch 62/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3384 - recall: 0.8543 - val_loss: 0.4598 - val_recall: 0.6727\n",
      "Epoch 63/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3365 - recall: 0.8532 - val_loss: 0.4797 - val_recall: 0.6879\n",
      "Epoch 64/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3421 - recall: 0.8461 - val_loss: 0.4814 - val_recall: 0.6879\n",
      "Epoch 65/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3347 - recall: 0.8545 - val_loss: 0.4793 - val_recall: 0.6667\n",
      "Epoch 66/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3401 - recall: 0.8502 - val_loss: 0.4589 - val_recall: 0.6485\n",
      "Epoch 67/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3354 - recall: 0.8504 - val_loss: 0.4752 - val_recall: 0.6848\n",
      "Epoch 68/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3392 - recall: 0.8489 - val_loss: 0.4966 - val_recall: 0.6788\n",
      "Epoch 69/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3350 - recall: 0.8520 - val_loss: 0.4628 - val_recall: 0.6788\n",
      "Epoch 70/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3353 - recall: 0.8520 - val_loss: 0.4706 - val_recall: 0.6697\n",
      "Epoch 71/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3311 - recall: 0.8547 - val_loss: 0.4638 - val_recall: 0.6455\n",
      "Epoch 72/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3375 - recall: 0.8504 - val_loss: 0.4763 - val_recall: 0.6848\n",
      "Epoch 73/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3355 - recall: 0.8526 - val_loss: 0.4745 - val_recall: 0.6727\n",
      "Epoch 74/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3332 - recall: 0.8596 - val_loss: 0.4703 - val_recall: 0.6758\n",
      "Epoch 75/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3287 - recall: 0.8563 - val_loss: 0.4615 - val_recall: 0.6455\n",
      "Epoch 76/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3282 - recall: 0.8561 - val_loss: 0.4697 - val_recall: 0.6424\n",
      "Epoch 77/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3376 - recall: 0.8526 - val_loss: 0.4849 - val_recall: 0.6636\n",
      "Epoch 78/100\n",
      "1022/1022 [==============================] - 4s 3ms/step - loss: 0.3277 - recall: 0.8543 - val_loss: 0.4711 - val_recall: 0.6515\n",
      "Epoch 79/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3320 - recall: 0.8512 - val_loss: 0.4740 - val_recall: 0.6667\n",
      "Epoch 80/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3283 - recall: 0.8581 - val_loss: 0.4736 - val_recall: 0.6848\n",
      "Epoch 81/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3224 - recall: 0.8594 - val_loss: 0.4826 - val_recall: 0.6758\n",
      "Epoch 82/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3251 - recall: 0.8612 - val_loss: 0.4855 - val_recall: 0.6667\n",
      "Epoch 83/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3252 - recall: 0.8602 - val_loss: 0.4615 - val_recall: 0.6424\n",
      "Epoch 84/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3251 - recall: 0.8598 - val_loss: 0.4744 - val_recall: 0.6727\n",
      "Epoch 85/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3308 - recall: 0.8516 - val_loss: 0.4594 - val_recall: 0.6424\n",
      "Epoch 86/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3228 - recall: 0.8614 - val_loss: 0.4886 - val_recall: 0.6788\n",
      "Epoch 87/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3279 - recall: 0.8616 - val_loss: 0.4366 - val_recall: 0.6273\n",
      "Epoch 88/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3261 - recall: 0.8573 - val_loss: 0.4928 - val_recall: 0.6879\n",
      "Epoch 89/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3280 - recall: 0.8583 - val_loss: 0.4786 - val_recall: 0.6939\n",
      "Epoch 90/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3219 - recall: 0.8649 - val_loss: 0.4681 - val_recall: 0.6667\n",
      "Epoch 91/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3232 - recall: 0.8581 - val_loss: 0.4862 - val_recall: 0.6697\n",
      "Epoch 92/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3177 - recall: 0.8635 - val_loss: 0.4840 - val_recall: 0.6606\n",
      "Epoch 93/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3219 - recall: 0.8673 - val_loss: 0.4823 - val_recall: 0.7000\n",
      "Epoch 94/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3249 - recall: 0.8634 - val_loss: 0.4610 - val_recall: 0.6333\n",
      "Epoch 95/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3273 - recall: 0.8588 - val_loss: 0.4833 - val_recall: 0.6636\n",
      "Epoch 96/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3245 - recall: 0.8622 - val_loss: 0.4739 - val_recall: 0.6606\n",
      "Epoch 97/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3194 - recall: 0.8657 - val_loss: 0.4676 - val_recall: 0.6394\n",
      "Epoch 98/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3205 - recall: 0.8634 - val_loss: 0.4833 - val_recall: 0.6697\n",
      "Epoch 99/100\n",
      "1022/1022 [==============================] - 4s 4ms/step - loss: 0.3204 - recall: 0.8620 - val_loss: 0.4756 - val_recall: 0.6545\n",
      "Epoch 100/100\n",
      "1022/1022 [==============================] - 3s 3ms/step - loss: 0.3172 - recall: 0.8704 - val_loss: 0.4693 - val_recall: 0.6394\n"
     ]
    }
   ],
   "source": [
    "history = model6.fit(X_train_smote6, y_train_smote6, batch_size=10 ,validation_data=(X_val, y_val), epochs=100, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63/63 [==============================] - 0s 2ms/step - loss: 0.4364 - recall: 0.6434\n"
     ]
    }
   ],
   "source": [
    "score6 = model6.evaluate(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "320/320 [==============================] - 1s 2ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [False],\n",
       "       [False],\n",
       "       ...,\n",
       "       [ True],\n",
       "       [ True],\n",
       "       [ True]])"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train_pred6 = model6.predict(X_train_smote6)\n",
    "y_train_pred6 = (y_train_pred6 > 0.5)\n",
    "y_train_pred6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50/50 [==============================] - 0s 1ms/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[False],\n",
       "       [ True],\n",
       "       [False],\n",
       "       ...,\n",
       "       [False],\n",
       "       [False],\n",
       "       [False]])"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_val_pred6 = model6.predict(X_val)\n",
    "y_val_pred6 = (y_val_pred6 > 0.5)\n",
    "y_val_pred6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_name6 = \"Model 6 Adam w/ Dropout and smote\"\n",
    "train_metric_df.loc[model_name6] = recall_score(y_train_smote,y_train_pred6)\n",
    "valid_metric_df.loc[model_name6] = recall_score(y_val,y_val_pred6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.90      0.90      5108\n",
      "           1       0.90      0.91      0.90      5108\n",
      "\n",
      "    accuracy                           0.90     10216\n",
      "   macro avg       0.90      0.90      0.90     10216\n",
      "weighted avg       0.90      0.90      0.90     10216\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_6_1 = classification_report(y_train_smote6, y_train_pred6)\n",
    "print(cr_6_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.90      0.85      0.87      1270\n",
      "           1       0.52      0.64      0.57       330\n",
      "\n",
      "    accuracy                           0.80      1600\n",
      "   macro avg       0.71      0.74      0.72      1600\n",
      "weighted avg       0.82      0.80      0.81      1600\n",
      "\n"
     ]
    }
   ],
   "source": [
    "cr_6_2 = classification_report(y_val, y_val_pred6)\n",
    "print(cr_6_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_train_smote6, y_train_pred6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(y_val, y_val_pred6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "srfZVuMKc6Y_"
   },
   "source": [
    "## Model Performance Comparison and Final Model Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {
    "id": "_vhQsZT5MR_9"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Performance\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>recall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Model 1 SDG</th>\n",
       "      <td>0.313467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 2 Adam</th>\n",
       "      <td>0.736068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 3 Adam w/ Dropout</th>\n",
       "      <td>0.580495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 4 SDG w/ smote</th>\n",
       "      <td>0.774667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 5 Adam w/ Smote</th>\n",
       "      <td>0.943226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 6 Adam w/ Dropout and smote</th>\n",
       "      <td>0.905834</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     recall\n",
       "Model 1 SDG                        0.313467\n",
       "Model 2 Adam                       0.736068\n",
       "Model 3 Adam w/ Dropout            0.580495\n",
       "Model 4 SDG w/ smote               0.774667\n",
       "Model 5 Adam w/ Smote              0.943226\n",
       "Model 6 Adam w/ Dropout and smote  0.905834"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Training Performance\")\n",
    "train_metric_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation Performance\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>recall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Model 1 SDG</th>\n",
       "      <td>0.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 2 Adam</th>\n",
       "      <td>0.454545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 3 Adam w/ Dropout</th>\n",
       "      <td>0.463636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 4 SDG w/ smote</th>\n",
       "      <td>0.715152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 5 Adam w/ Smote</th>\n",
       "      <td>0.566667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Model 6 Adam w/ Dropout and smote</th>\n",
       "      <td>0.639394</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     recall\n",
       "Model 1 SDG                        0.300000\n",
       "Model 2 Adam                       0.454545\n",
       "Model 3 Adam w/ Dropout            0.463636\n",
       "Model 4 SDG w/ smote               0.715152\n",
       "Model 5 Adam w/ Smote              0.566667\n",
       "Model 6 Adam w/ Dropout and smote  0.639394"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Validation Performance\")\n",
    "valid_metric_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XE1iHOqqOEmV"
   },
   "source": [
    "## Actionable Insights and Business Recommendations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ouNNiEhUdhZL"
   },
   "source": [
    "* According to the data, Model 4 SDG w/ smote did the best overall as it had the highest recall on the validation set. Models 5 and 6 did better on the test set but when run on validation the recall dropped signifigantly. \n",
    "\n",
    "* The business will be able to predict the rate of exit using Model 4 with a 71.5% accuracy.\n",
    "\n",
    "* This will enable the bank to go after those customers that might have exited with special offers.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "6R23W-K3CmM9"
   },
   "source": [
    "<font size=6 color='blue'>Power Ahead</font>\n",
    "___"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [
    "Q__obHNhdHtV",
    "WSyQJZSAaPA3",
    "s749lpTNaRkN",
    "Tsb28swdaVAs",
    "FHHrSIl4c6Yn",
    "z7ubXtC8HUOA",
    "eRxrJ2MHd_Sf",
    "W036jsgwRdVN",
    "nSFkV8KJiZSv",
    "OlHTHF4glMxS",
    "CUXPaUwZHUO8",
    "wgpx0xlSTlzN",
    "1nEEjgwleiMv",
    "qlSyq5fNHUPp",
    "ZLQMVCywT87j",
    "SzDpHlsFT_QA",
    "735HwSYiDSf1",
    "EcEiT7Vyc6Y0",
    "I-86J6fRu0vu",
    "m1Hav_XNu6ro",
    "sFhOUq6au-xp",
    "srfZVuMKc6Y_",
    "XE1iHOqqOEmV"
   ],
   "gpuType": "T4",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
